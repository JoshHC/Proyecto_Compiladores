/* The following code was generated by JFlex 1.4.3 on 21/08/19 09:41 AM */

package Analizador;
import static Analizador.Tokens.*;

/* Secci√≥n de declaraciones de JFlex */

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 21/08/19 09:41 AM from the specification file
 * <tt>C:/Users/josue/Documents/NetBeansProjects/Proyecto_Compiladores/Proyecto_Compiladores/src/Analizador/Alexico.flex</tt>
 */
class Alexico {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\4\1\46\2\0\1\4\22\0\1\4\1\0\1\0\1\0"+
    "\1\0\1\0\1\0\1\50\1\12\1\13\1\7\1\5\1\4\1\6"+
    "\1\0\1\10\1\47\1\47\10\2\1\0\1\0\1\0\1\11\1\0"+
    "\1\0\1\0\1\14\1\32\1\26\1\15\1\16\1\30\1\36\1\31"+
    "\1\33\1\44\1\40\1\23\1\41\1\22\1\25\1\24\1\45\1\21"+
    "\1\34\1\20\1\27\1\43\1\42\1\17\1\35\1\37\1\0\1\0"+
    "\1\0\1\0\1\1\1\0\32\3\1\0\1\0\1\0\uff82\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\11\1\1\30\2\1\12\1\1\1\13\1\0"+
    "\1\14\1\0\1\2\1\15\6\2\1\15\20\2\1\15"+
    "\12\2\1\15\15\2\2\15\3\2\1\15\32\2\2\15"+
    "\21\2\1\15\17\2\1\0\1\13\2\0\1\2\1\15"+
    "\7\2\1\15\15\2\1\15\57\2\1\15\24\2\1\15"+
    "\5\2\1\15\16\2\1\15\2\2\1\15\6\2\1\15"+
    "\14\2\1\15\4\2\1\15\7\2\2\0\1\16\14\2"+
    "\1\15\10\2\1\0\4\2\1\15\3\2\1\15\2\2"+
    "\1\15\20\2\1\15\7\2\1\15\3\2\1\15\2\2"+
    "\1\15\17\2\1\15\44\2\2\15\1\2\1\14\15\2"+
    "\1\0\1\15\52\2\1\15\31\2\1\15\5\2\1\15"+
    "\1\0\46\2\1\0\11\2\1\15\4\2\1\15\6\2"+
    "\1\15\5\2\1\15\6\2\1\15\3\2\1\15\34\2"+
    "\1\15\23\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[653];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\51\0\122\0\173\0\244\0\51\0\51\0\51"+
    "\0\315\0\51\0\366\0\u011f\0\u0148\0\u0171\0\u019a\0\u01c3"+
    "\0\u01ec\0\u0215\0\u023e\0\u0267\0\u0290\0\u02b9\0\u02e2\0\u030b"+
    "\0\u0334\0\u035d\0\u0386\0\u03af\0\u03d8\0\u0401\0\u042a\0\u0453"+
    "\0\u047c\0\u04a5\0\u04ce\0\173\0\u04f7\0\u0520\0\u0549\0\u0572"+
    "\0\u059b\0\u05c4\0\122\0\u05ed\0\u0616\0\u063f\0\u0668\0\u0691"+
    "\0\u06ba\0\u06e3\0\u070c\0\u0735\0\u075e\0\u0787\0\u07b0\0\u07d9"+
    "\0\u0802\0\u082b\0\u0854\0\u087d\0\u08a6\0\u08cf\0\u08f8\0\u0921"+
    "\0\u094a\0\u0973\0\u099c\0\u09c5\0\u09ee\0\u0a17\0\u0a40\0\u0a69"+
    "\0\u0a92\0\u0abb\0\u0ae4\0\u0b0d\0\u0b36\0\u0b5f\0\u0b88\0\u0bb1"+
    "\0\u0bda\0\u0c03\0\u0c2c\0\u0c55\0\u0c7e\0\u0ca7\0\u0cd0\0\u0cf9"+
    "\0\u0d22\0\u0d4b\0\u0d74\0\u0d9d\0\u0dc6\0\u0def\0\u0e18\0\u0e41"+
    "\0\u0e6a\0\u0e93\0\u0ebc\0\u0ee5\0\u0f0e\0\u0f37\0\u0f60\0\u0f89"+
    "\0\u0fb2\0\u0fdb\0\u1004\0\u102d\0\u1056\0\u107f\0\u10a8\0\u10d1"+
    "\0\u10fa\0\u1123\0\u114c\0\u1175\0\u119e\0\u11c7\0\u11f0\0\u1219"+
    "\0\u1242\0\u126b\0\u1294\0\u12bd\0\u12e6\0\u130f\0\u1338\0\u1361"+
    "\0\u138a\0\u13b3\0\u13dc\0\u1405\0\u142e\0\u1457\0\u1480\0\u14a9"+
    "\0\u14d2\0\u14fb\0\u1524\0\u154d\0\u1576\0\u159f\0\u15c8\0\u15f1"+
    "\0\u161a\0\u1643\0\u166c\0\u1695\0\u16be\0\u16e7\0\u1710\0\u1739"+
    "\0\u1762\0\u178b\0\u17b4\0\u17dd\0\u1806\0\u182f\0\u1858\0\u1858"+
    "\0\u1881\0\u18aa\0\u18d3\0\u18fc\0\u1925\0\u194e\0\u1977\0\u19a0"+
    "\0\u19c9\0\u19f2\0\u1a1b\0\u1a44\0\u1a6d\0\u1a96\0\u099c\0\u1abf"+
    "\0\u1ae8\0\u1b11\0\u1b3a\0\u1b63\0\u1b8c\0\u1bb5\0\u1bde\0\u1c07"+
    "\0\u1c30\0\u1c59\0\u1c82\0\u1cab\0\u1cd4\0\u1cfd\0\u1d26\0\u1d4f"+
    "\0\u1d78\0\u1da1\0\u1dca\0\u1df3\0\u1e1c\0\u1e45\0\u1e6e\0\u1e97"+
    "\0\u1ec0\0\u1ee9\0\u1f12\0\u1f3b\0\u1f64\0\u1f8d\0\u1fb6\0\u1fdf"+
    "\0\u2008\0\u2031\0\u205a\0\u2083\0\u20ac\0\u20d5\0\u20fe\0\u2127"+
    "\0\u2150\0\u2179\0\u21a2\0\u21cb\0\u21f4\0\u221d\0\u2246\0\u226f"+
    "\0\u2298\0\u22c1\0\u22ea\0\u2313\0\u233c\0\u2365\0\u238e\0\u23b7"+
    "\0\u23e0\0\u2409\0\u2432\0\u245b\0\u2484\0\u24ad\0\u24d6\0\u24ff"+
    "\0\u2528\0\u2551\0\u257a\0\u25a3\0\u25cc\0\u25f5\0\u261e\0\u2647"+
    "\0\u2670\0\u2699\0\u26c2\0\u26eb\0\u2714\0\u273d\0\u2766\0\u278f"+
    "\0\u27b8\0\u27e1\0\u280a\0\u2833\0\u285c\0\u2885\0\u28ae\0\u28d7"+
    "\0\u2900\0\u2929\0\u2952\0\u297b\0\u2766\0\u29a4\0\u29cd\0\u29f6"+
    "\0\u2a1f\0\u2a48\0\u2a71\0\u2a9a\0\u2ac3\0\u2aec\0\u2b15\0\u2b3e"+
    "\0\u2b67\0\u2b90\0\u2bb9\0\u2be2\0\u2c0b\0\u2c34\0\u2c5d\0\u2c86"+
    "\0\u2caf\0\u2cd8\0\u2d01\0\u2d2a\0\u2d53\0\u2d7c\0\u2da5\0\u2dce"+
    "\0\u2df7\0\u2e20\0\u2e49\0\u2e72\0\u2e9b\0\u2ec4\0\u2eed\0\u2f16"+
    "\0\u2f3f\0\u2f68\0\u2f91\0\u2fba\0\u2fe3\0\u300c\0\u3035\0\u04f7"+
    "\0\u305e\0\51\0\u3087\0\u30b0\0\u30d9\0\u3102\0\u312b\0\u3154"+
    "\0\u317d\0\u31a6\0\u31cf\0\u31f8\0\u3221\0\u324a\0\u3273\0\u329c"+
    "\0\u32c5\0\u32ee\0\u3317\0\u3340\0\u3369\0\u3392\0\u33bb\0\u33e4"+
    "\0\u340d\0\u3436\0\u345f\0\u3488\0\u34b1\0\u34da\0\u3503\0\u352c"+
    "\0\u3555\0\u357e\0\u35a7\0\u35d0\0\u35f9\0\u3622\0\u364b\0\u3674"+
    "\0\u369d\0\u36c6\0\u36ef\0\u3718\0\u3741\0\u376a\0\u3793\0\u37bc"+
    "\0\u37e5\0\u380e\0\u3837\0\u3860\0\u3889\0\u38b2\0\u38db\0\u3904"+
    "\0\u392d\0\u3956\0\u397f\0\u39a8\0\u39d1\0\u39fa\0\u3a23\0\u3a4c"+
    "\0\u3a75\0\u3a9e\0\u3ac7\0\u3af0\0\u3b19\0\u3b42\0\u3b6b\0\u3b94"+
    "\0\u3bbd\0\u3be6\0\u3c0f\0\u3c38\0\u3c61\0\u3c8a\0\u3cb3\0\u2f16"+
    "\0\u3cdc\0\u3d05\0\u3d2e\0\u3d57\0\u3d80\0\u3da9\0\u3dd2\0\u3dfb"+
    "\0\u3e24\0\u3e4d\0\u3e76\0\u3e9f\0\u3ec8\0\u3ef1\0\u3f1a\0\u3f43"+
    "\0\u3f6c\0\u3f95\0\u3fbe\0\u3fe7\0\u4010\0\u4039\0\u4062\0\u408b"+
    "\0\u40b4\0\u40dd\0\u4106\0\u412f\0\u4158\0\u4181\0\u41aa\0\u41d3"+
    "\0\u41fc\0\u4225\0\u424e\0\u4277\0\u42a0\0\u42c9\0\u42f2\0\u431b"+
    "\0\u4344\0\u436d\0\u4396\0\51\0\u43bf\0\u43e8\0\u18fc\0\u4411"+
    "\0\u443a\0\u4463\0\u448c\0\u44b5\0\u44de\0\u4507\0\u4530\0\u4559"+
    "\0\u4582\0\u45ab\0\u45d4\0\u45fd\0\u4626\0\u464f\0\u4678\0\u46a1"+
    "\0\u46ca\0\u46f3\0\u471c\0\u4745\0\u476e\0\u4797\0\u47c0\0\u47e9"+
    "\0\u4812\0\u483b\0\u4864\0\u488d\0\u48b6\0\u48df\0\u4908\0\u4931"+
    "\0\u495a\0\u4983\0\u49ac\0\u49d5\0\u49fe\0\u4a27\0\u4a50\0\u2a9a"+
    "\0\u4a79\0\u4aa2\0\u4acb\0\u4af4\0\u4b1d\0\u4b46\0\u4b6f\0\u4b98"+
    "\0\u4bc1\0\u4bea\0\u4c13\0\u4c3c\0\u4c65\0\u4c8e\0\u4cb7\0\u4ce0"+
    "\0\u4d09\0\u4d32\0\u4d5b\0\u4d84\0\u4dad\0\u4dd6\0\u4dff\0\u4e28"+
    "\0\u4e51\0\u4e7a\0\u4ea3\0\u4ecc\0\u4ef5\0\u4f1e\0\u4f47\0\u4f70"+
    "\0\u4f99\0\u4fc2\0\u4feb\0\u5014\0\u503d\0\u5066\0\u508f\0\u380e"+
    "\0\u50b8\0\u50e1\0\u510a\0\u5133\0\u515c\0\u1925\0\u5185\0\u51ae"+
    "\0\u51d7\0\u5200\0\u5229\0\u5252\0\u527b\0\u52a4\0\u52cd\0\u52f6"+
    "\0\u531f\0\u5348\0\u5371\0\u539a\0\u53c3\0\u53ec\0\u5415\0\u543e"+
    "\0\u5467\0\u5490\0\u54b9\0\u54e2\0\u550b\0\u5534\0\u555d\0\u5586"+
    "\0\u55af\0\u55d8\0\u5601\0\u562a\0\u5653\0\u567c\0\u56a5\0\u56ce"+
    "\0\u56f7\0\u5720\0\u5749\0\u5772\0\u579b\0\u57c4\0\u57ed\0\u5816"+
    "\0\u583f\0\u5868\0\u5891\0\u58ba\0\u58e3\0\u590c\0\u5935\0\u21a2"+
    "\0\u595e\0\u5987\0\u59b0\0\u59d9\0\u5a02\0\u5a2b\0\u5a54\0\u5a7d"+
    "\0\u5aa6\0\u0dc6\0\u5acf\0\u56f7\0\u5af8\0\u5b21\0\u2c34\0\u5b4a"+
    "\0\u5b73\0\51\0\u5b9c\0\u5bc5\0\u5bee\0\u5c17\0\u5c40\0\u5c69"+
    "\0\u5c92\0\u5cbb\0\u5ce4\0\u5d0d\0\u5d36\0\u5d5f\0\u5d88\0\u5db1"+
    "\0\u5dda\0\u5e03\0\u5e2c\0\u5e55\0\u5e7e\0\u5ea7\0\u5ed0\0\u5ef9"+
    "\0\u5f22\0\u5f4b\0\u5f74\0\u5f9d\0\u5fc6\0\u5fef\0\u6018\0\u6041"+
    "\0\u606a\0\u6093\0\u60bc\0\u60e5\0\u610e\0\u6137\0\u6160\0\u6189"+
    "\0\u61b2\0\u61db\0\u6204\0\u622d\0\u6256\0\u627f\0\u62a8\0\u62d1"+
    "\0\u62fa\0\u6323\0\u634c\0\u6375\0\u639e\0\u5c92\0\u63c7\0\u63f0"+
    "\0\u6419\0\u6442\0\u646b\0\u6494\0\u64bd";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[653];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\3\1\5\1\6\1\7\1\10"+
    "\1\11\1\12\1\13\1\2\1\14\1\15\1\16\1\3"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\3\1\5\1\44"+
    "\1\45\52\0\3\3\10\0\32\3\1\0\1\3\1\0"+
    "\2\46\1\4\43\46\1\0\1\4\1\46\4\0\1\5"+
    "\41\0\1\5\11\0\1\47\1\50\46\0\1\51\43\0"+
    "\3\3\10\0\1\3\1\52\2\3\1\53\1\54\1\55"+
    "\1\56\2\3\1\57\1\60\2\3\1\61\1\3\1\62"+
    "\6\3\1\63\2\3\1\0\1\3\2\0\3\3\10\0"+
    "\1\64\1\3\1\65\2\3\1\66\3\3\1\67\1\3"+
    "\1\70\2\3\1\71\1\72\12\3\1\0\1\3\2\0"+
    "\3\3\10\0\3\3\1\73\1\3\1\74\1\75\1\76"+
    "\10\3\1\77\11\3\1\0\1\3\2\0\3\3\10\0"+
    "\1\100\1\3\1\101\2\3\1\102\3\3\1\103\3\3"+
    "\1\104\1\3\1\105\1\106\11\3\1\0\1\3\2\0"+
    "\3\3\10\0\1\107\1\3\1\110\6\3\1\111\1\3"+
    "\1\112\3\3\1\113\12\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\114\1\3\1\115\6\3\1\116\1\117\1\120"+
    "\16\3\1\0\1\3\2\0\3\3\10\0\1\121\1\3"+
    "\1\122\6\3\1\123\5\3\1\124\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\125\1\3\1\126\2\3\1\127"+
    "\1\3\1\130\1\3\1\131\1\3\1\132\3\3\1\133"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\5\3\1\134"+
    "\1\135\1\3\1\136\1\3\1\137\1\140\1\141\12\3"+
    "\1\142\2\3\1\0\1\3\2\0\3\3\10\0\1\143"+
    "\4\3\1\144\1\3\1\145\1\3\1\146\1\3\1\147"+
    "\1\3\1\150\14\3\1\0\1\3\2\0\3\3\10\0"+
    "\6\3\1\151\1\3\1\152\7\3\1\153\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\154\1\3\1\155\2\3"+
    "\1\156\1\3\1\157\1\3\1\160\1\3\1\161\3\3"+
    "\1\162\12\3\1\0\1\3\2\0\3\3\10\0\1\163"+
    "\10\3\1\164\20\3\1\0\1\3\2\0\3\3\10\0"+
    "\1\165\1\3\1\166\2\3\1\167\3\3\1\170\1\3"+
    "\1\171\3\3\1\172\1\3\1\53\10\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\3\1\173\4\3\1\174\5\3"+
    "\1\53\3\3\1\175\4\3\1\176\4\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\177\1\3\1\200\1\3\1\201"+
    "\3\3\1\202\1\203\1\204\1\205\1\3\1\206\1\3"+
    "\1\207\1\3\1\210\3\3\1\211\3\3\1\212\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\213\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\214\2\3\1\215"+
    "\1\3\1\216\1\3\1\217\20\3\1\0\1\3\2\0"+
    "\3\3\10\0\11\3\1\220\20\3\1\0\1\3\2\0"+
    "\3\3\10\0\2\3\1\221\14\3\1\222\12\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\223\1\3\1\224\6\3"+
    "\1\225\5\3\1\226\12\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\227\4\3\1\230\3\3\1\231\3\3\1\232"+
    "\1\3\1\233\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\1\234\16\3\1\235\12\3\1\0\1\3\2\0\3\3"+
    "\10\0\11\3\1\236\20\3\1\0\1\3\1\0\46\237"+
    "\1\0\1\237\1\240\2\0\1\46\44\0\1\46\1\0"+
    "\46\241\1\0\2\241\46\50\1\0\2\50\2\0\1\242"+
    "\44\0\1\242\2\0\3\3\10\0\2\53\30\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\53\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\3\1\53\17\3\1\53"+
    "\10\3\1\0\1\3\2\0\3\3\10\0\4\3\1\243"+
    "\2\3\1\244\22\3\1\0\1\3\2\0\3\3\10\0"+
    "\4\3\1\245\25\3\1\0\1\3\2\0\3\3\10\0"+
    "\4\3\1\246\25\3\1\0\1\3\2\0\3\3\10\0"+
    "\20\3\1\247\11\3\1\0\1\3\2\0\3\3\10\0"+
    "\12\3\1\53\5\3\1\250\11\3\1\0\1\3\2\0"+
    "\3\3\10\0\22\3\1\53\7\3\1\0\1\3\2\0"+
    "\3\3\10\0\4\3\1\251\14\3\1\53\10\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\252\5\3\1\221\1\253"+
    "\2\3\1\254\1\3\1\255\3\3\1\256\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\11\3\1\257\20\3\1\0"+
    "\1\3\2\0\3\3\10\0\13\3\1\260\11\3\1\261"+
    "\4\3\1\0\1\3\2\0\3\3\10\0\25\3\1\257"+
    "\4\3\1\0\1\3\2\0\3\3\10\0\12\3\1\262"+
    "\17\3\1\0\1\3\2\0\3\3\10\0\1\263\17\3"+
    "\1\264\11\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\265\1\3\1\266\5\3\1\267\4\3\1\270\12\3"+
    "\1\0\1\3\2\0\3\3\10\0\5\3\1\271\24\3"+
    "\1\0\1\3\2\0\3\3\10\0\1\3\1\272\30\3"+
    "\1\0\1\3\2\0\3\3\10\0\20\3\1\54\11\3"+
    "\1\0\1\3\2\0\3\3\10\0\12\3\1\273\17\3"+
    "\1\0\1\3\2\0\3\3\10\0\16\3\1\274\13\3"+
    "\1\0\1\3\2\0\3\3\10\0\3\3\1\275\21\3"+
    "\1\276\4\3\1\0\1\3\2\0\3\3\10\0\1\277"+
    "\12\3\1\300\3\3\1\301\1\3\1\302\10\3\1\0"+
    "\1\3\2\0\3\3\10\0\10\3\1\53\21\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\303\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\25\3\1\304\4\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\305\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\17\3\1\306\12\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\307\3\3\1\310\2\3"+
    "\1\311\1\312\1\3\1\313\1\3\1\314\3\3\1\315"+
    "\6\3\1\316\2\3\1\0\1\3\2\0\3\3\10\0"+
    "\7\3\1\317\16\3\1\320\3\3\1\0\1\3\2\0"+
    "\3\3\10\0\7\3\1\54\22\3\1\0\1\3\2\0"+
    "\3\3\10\0\22\3\1\321\7\3\1\0\1\3\2\0"+
    "\3\3\10\0\4\3\1\322\20\3\1\323\4\3\1\0"+
    "\1\3\2\0\3\3\10\0\3\3\1\214\26\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\53\1\3\1\324"+
    "\3\3\1\325\17\3\1\0\1\3\2\0\3\3\10\0"+
    "\15\3\1\213\14\3\1\0\1\3\2\0\3\3\10\0"+
    "\7\3\1\326\15\3\1\327\4\3\1\0\1\3\2\0"+
    "\3\3\10\0\6\3\1\330\11\3\1\214\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\331\13\3\1\214\12\3"+
    "\1\332\2\3\1\0\1\3\2\0\3\3\10\0\1\333"+
    "\11\3\1\334\13\3\1\243\3\3\1\0\1\3\2\0"+
    "\3\3\10\0\6\3\1\335\15\3\1\54\5\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\3\1\53\3\3\1\336"+
    "\12\3\1\337\11\3\1\0\1\3\2\0\3\3\10\0"+
    "\5\3\1\340\24\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\341\6\3\1\342\5\3\1\343\12\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\303\31\3\1\0\1\3"+
    "\2\0\3\3\10\0\20\3\1\344\11\3\1\0\1\3"+
    "\2\0\3\3\10\0\16\3\1\345\13\3\1\0\1\3"+
    "\2\0\3\3\10\0\27\3\1\346\2\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\3\1\243\30\3\1\0\1\3"+
    "\2\0\3\3\10\0\7\3\1\221\22\3\1\0\1\3"+
    "\2\0\3\3\10\0\2\3\1\347\1\3\1\245\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\350\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\351\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\14\3\1\352\15\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\353\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\354\13\3"+
    "\1\355\11\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\356\6\3\1\357\20\3\1\0\1\3\2\0\3\3"+
    "\10\0\11\3\1\76\1\3\1\360\16\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\361\4\3\1\362\1\363\1\364"+
    "\3\3\1\365\11\3\1\366\4\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\367\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\1\370\1\3\1\371\27\3\1\0\1\3"+
    "\2\0\3\3\10\0\10\3\1\372\6\3\1\373\4\3"+
    "\1\374\5\3\1\0\1\3\2\0\3\3\10\0\1\3"+
    "\1\375\6\3\1\243\21\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\376\1\3\1\377\14\3\1\u0100\12\3\1\0"+
    "\1\3\2\0\3\3\10\0\7\3\1\76\22\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\u0101\25\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\u0102\6\3\1\u0103"+
    "\20\3\1\0\1\3\2\0\3\3\10\0\11\3\1\u0104"+
    "\20\3\1\0\1\3\2\0\3\3\10\0\5\3\1\u0105"+
    "\5\3\1\u0106\16\3\1\0\1\3\2\0\3\3\10\0"+
    "\6\3\1\u0107\1\u0108\22\3\1\0\1\3\2\0\3\3"+
    "\10\0\5\3\1\u0109\1\3\1\u010a\22\3\1\0\1\3"+
    "\2\0\3\3\10\0\27\3\1\u010b\2\3\1\0\1\3"+
    "\2\0\3\3\10\0\7\3\1\u010c\3\3\1\u010d\16\3"+
    "\1\0\1\3\2\0\3\3\10\0\12\3\1\u010e\17\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u010f\15\3"+
    "\1\236\7\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\u0110\6\3\1\u0111\20\3\1\0\1\3\2\0\3\3"+
    "\10\0\4\3\1\u0112\25\3\1\0\1\3\2\0\3\3"+
    "\10\0\7\3\1\u0113\22\3\1\0\1\3\2\0\3\3"+
    "\10\0\4\3\1\u0114\25\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\u0115\27\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\3\1\u0116\2\3\1\u0117\1\3\1\243\1\3"+
    "\1\u0118\1\3\1\u0119\4\3\1\u011a\1\u011b\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\11\3\1\u011c\20\3\1\0"+
    "\1\3\2\0\3\3\10\0\25\3\1\u011d\4\3\1\0"+
    "\1\3\2\0\3\3\10\0\27\3\1\54\2\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\u011e\2\3\1\u011f"+
    "\2\3\1\u0120\5\3\1\u0121\4\3\1\u0122\4\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\u0123\31\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\u0124\31\3\1\0\1\3\2\0"+
    "\3\3\10\0\25\3\1\54\4\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u0125\7\3\1\u0126\14\3\1\0"+
    "\1\3\2\0\3\3\10\0\16\3\1\u0127\6\3\1\53"+
    "\4\3\1\0\1\3\2\0\3\3\10\0\13\3\1\u0128"+
    "\16\3\1\0\1\3\2\0\3\3\10\0\23\3\1\54"+
    "\6\3\1\0\1\3\2\0\3\3\10\0\20\3\1\u0129"+
    "\11\3\1\0\1\3\2\0\3\3\10\0\1\u012a\31\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\u012b\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\1\u010d\31\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\53\25\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\365\10\3\1\u012c\20\3"+
    "\1\0\1\3\2\0\3\3\10\0\11\3\1\u012d\20\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u012e\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\54\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\21\3\1\53\10\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\u0108\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\3\3\1\53\1\u0101"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\5\3\1\376"+
    "\24\3\1\0\1\3\2\0\3\3\10\0\1\3\1\u012f"+
    "\4\3\1\170\23\3\1\0\1\3\2\0\3\3\10\0"+
    "\6\3\1\u0130\23\3\1\0\1\3\2\0\3\3\10\0"+
    "\17\3\1\u0131\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\17\3\1\u0132\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\5\3\1\u0113\24\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\u0133\14\3\1\112\12\3\1\0\1\3\2\0"+
    "\3\3\10\0\4\3\1\u0134\25\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u0135\1\3\1\u0136\22\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\u0137\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\17\3\1\303\12\3\1\0"+
    "\1\3\1\0\50\u0138\10\0\1\u0139\43\0\1\242\10\0"+
    "\1\u013a\33\0\1\242\2\0\3\3\10\0\2\3\1\u010d"+
    "\27\3\1\0\1\3\2\0\3\3\10\0\11\3\1\u013b"+
    "\20\3\1\0\1\3\2\0\3\3\10\0\17\3\1\u013c"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\15\3\1\u013d"+
    "\14\3\1\0\1\3\2\0\3\3\10\0\11\3\1\u013e"+
    "\20\3\1\0\1\3\2\0\3\3\10\0\2\3\1\u013f"+
    "\27\3\1\0\1\3\2\0\3\3\10\0\1\u0140\1\3"+
    "\1\53\27\3\1\0\1\3\2\0\3\3\10\0\7\3"+
    "\1\u0141\22\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\u0142\27\3\1\0\1\3\2\0\3\3\10\0\7\3"+
    "\1\u0143\7\3\1\u0144\12\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\u0145\1\3\1\u0146\27\3\1\0\1\3\2\0"+
    "\3\3\10\0\12\3\1\u0147\17\3\1\0\1\3\2\0"+
    "\3\3\10\0\16\3\1\112\13\3\1\0\1\3\2\0"+
    "\3\3\10\0\1\236\31\3\1\0\1\3\2\0\3\3"+
    "\10\0\12\3\1\53\17\3\1\0\1\3\2\0\3\3"+
    "\10\0\22\3\1\u0148\7\3\1\0\1\3\2\0\3\3"+
    "\10\0\4\3\1\u0149\5\3\1\u014a\11\3\1\53\5\3"+
    "\1\0\1\3\2\0\3\3\10\0\12\3\1\u0130\17\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u014b\2\3"+
    "\1\u014c\24\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\u014d\27\3\1\0\1\3\2\0\3\3\10\0\4\3"+
    "\1\53\13\3\1\u014e\11\3\1\0\1\3\2\0\3\3"+
    "\10\0\7\3\1\u014f\22\3\1\0\1\3\2\0\3\3"+
    "\2\0\1\u0150\5\0\32\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\u0151\31\3\1\0\1\3\2\0\3\3\10\0"+
    "\7\3\1\u0152\22\3\1\0\1\3\2\0\3\3\10\0"+
    "\4\3\1\u0153\25\3\1\0\1\3\2\0\3\3\10\0"+
    "\10\3\1\u0154\21\3\1\0\1\3\2\0\3\3\10\0"+
    "\6\3\1\u0155\10\3\1\u0156\12\3\1\0\1\3\2\0"+
    "\3\3\10\0\2\3\1\53\3\3\1\u013b\23\3\1\0"+
    "\1\3\2\0\3\3\10\0\22\3\1\u0157\2\3\1\53"+
    "\4\3\1\0\1\3\2\0\1\u0158\2\3\10\0\32\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\53\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u0159\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\31\3\1\u015a\1\0"+
    "\1\3\2\0\3\3\10\0\20\3\1\u015b\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\3\1\u015c\5\3\1\53"+
    "\22\3\1\0\1\3\2\0\3\3\10\0\13\3\1\u015d"+
    "\16\3\1\0\1\3\2\0\3\3\10\0\1\u015e\31\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\u015f\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\11\3\1\u0160\20\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u0161\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u0162\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u0163\6\3"+
    "\1\u0164\20\3\1\0\1\3\2\0\3\3\10\0\7\3"+
    "\1\u0165\22\3\1\0\1\3\2\0\3\3\10\0\12\3"+
    "\1\u0166\5\3\1\53\1\3\1\u0167\7\3\1\0\1\3"+
    "\2\0\3\3\10\0\15\3\1\214\14\3\1\0\1\3"+
    "\2\0\3\3\10\0\13\3\1\u0168\3\3\1\u0169\12\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u016a\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\53\7\3"+
    "\1\u016b\17\3\1\0\1\3\2\0\3\3\10\0\15\3"+
    "\1\u016c\14\3\1\0\1\3\2\0\3\3\10\0\7\3"+
    "\1\u016d\22\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\u016e\27\3\1\0\1\3\2\0\3\3\10\0\22\3"+
    "\1\u016f\7\3\1\0\1\3\2\0\3\3\10\0\1\3"+
    "\1\u010b\30\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\u0108\27\3\1\0\1\3\2\0\3\3\10\0\1\3"+
    "\1\53\30\3\1\0\1\3\2\0\3\3\10\0\1\u0108"+
    "\31\3\1\0\1\3\2\0\3\3\10\0\2\3\1\u0170"+
    "\27\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u0171"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\12\3\1\334"+
    "\17\3\1\0\1\3\2\0\3\3\10\0\12\3\1\u0172"+
    "\17\3\1\0\1\3\2\0\3\3\10\0\10\3\1\u0143"+
    "\1\3\1\u0173\5\3\1\u0174\11\3\1\0\1\3\2\0"+
    "\3\3\10\0\12\3\1\u0175\17\3\1\0\1\3\2\0"+
    "\3\3\10\0\6\3\1\214\2\3\1\u010d\13\3\1\u0176"+
    "\1\3\1\u0177\2\3\1\0\1\3\2\0\3\3\10\0"+
    "\17\3\1\57\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\7\3\1\u0178\22\3\1\0\1\3\2\0\3\3\10\0"+
    "\11\3\1\214\20\3\1\0\1\3\2\0\3\3\10\0"+
    "\6\3\1\u0179\23\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\u017a\27\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\u010d\5\3\1\u0118\21\3\1\0\1\3\2\0"+
    "\3\3\10\0\20\3\1\u017b\11\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u017c\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\1\u017d\31\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\53\1\3\1\53\5\3\1\u017e\17\3"+
    "\1\0\1\3\2\0\3\3\10\0\1\u0142\31\3\1\0"+
    "\1\3\2\0\3\3\10\0\20\3\1\u016a\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\20\3\1\u017f\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\7\3\1\u0180\22\3\1\0"+
    "\1\3\2\0\3\3\10\0\5\3\1\u0181\24\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\u0182\1\3\1\u0183"+
    "\11\3\1\u0184\6\3\1\u0185\2\3\1\0\1\3\2\0"+
    "\3\3\10\0\7\3\1\u0186\3\3\1\u0187\16\3\1\0"+
    "\1\3\2\0\3\3\10\0\6\3\1\214\23\3\1\0"+
    "\1\3\2\0\3\3\10\0\10\3\1\u0188\14\3\1\u0189"+
    "\4\3\1\0\1\3\2\0\3\3\10\0\5\3\1\u018a"+
    "\12\3\1\u018b\11\3\1\0\1\3\2\0\3\3\10\0"+
    "\5\3\1\u018c\24\3\1\0\1\3\2\0\3\3\10\0"+
    "\12\3\1\u018d\17\3\1\0\1\3\2\0\3\3\10\0"+
    "\17\3\1\133\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\11\3\1\303\17\3\1\u018e\1\0\1\3\2\0\3\3"+
    "\10\0\6\3\1\u018f\23\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\u0132\31\3\1\0\1\3\2\0\3\3\10\0"+
    "\22\3\1\54\7\3\1\0\1\3\2\0\3\3\10\0"+
    "\5\3\1\53\24\3\1\0\1\3\2\0\3\3\10\0"+
    "\6\3\1\63\23\3\1\0\1\3\2\0\3\3\10\0"+
    "\12\3\1\u0112\17\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\u0190\27\3\1\0\1\3\2\0\3\3\10\0"+
    "\25\3\1\53\4\3\1\0\1\3\2\0\3\3\10\0"+
    "\1\214\31\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\u0191\1\3\1\u0192\25\3\1\0\1\3\2\0\3\3"+
    "\10\0\6\3\1\333\23\3\1\0\1\3\2\0\3\3"+
    "\10\0\12\3\1\57\17\3\1\0\1\3\2\0\3\3"+
    "\10\0\7\3\1\53\22\3\1\0\1\3\2\0\3\3"+
    "\10\0\20\3\1\214\11\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\53\4\3\1\u0193\22\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\u0100\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\3\1\u0194\30\3\1\0\1\3"+
    "\2\0\3\3\10\0\24\3\1\u012c\5\3\1\0\1\3"+
    "\2\0\3\3\10\0\26\3\1\u0195\3\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\u0113\31\3\1\0\1\3\2\0"+
    "\3\3\10\0\26\3\1\76\3\3\1\0\1\3\2\0"+
    "\3\3\10\0\15\3\1\53\14\3\1\0\1\3\2\0"+
    "\3\3\10\0\24\3\1\53\5\3\1\0\1\3\2\0"+
    "\1\u0196\2\3\10\0\32\3\1\0\1\3\2\0\3\3"+
    "\10\0\6\3\1\u0197\23\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\u0198\14\3\1\u0199\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\2\3\1\u019a\6\3\1\53\20\3"+
    "\1\0\1\3\2\0\3\3\10\0\13\3\1\214\16\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\u019b\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u019c\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u019d\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\u019e\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u019f\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\13\3\1\u01a0\16\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u01a1\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\245\4\3"+
    "\1\u0106\1\3\1\u01a2\16\3\1\0\1\3\2\0\3\3"+
    "\10\0\20\3\1\u01a3\11\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\u01a4\31\3\1\0\1\3\2\0\3\3\10\0"+
    "\4\3\1\u01a5\25\3\1\0\1\3\2\0\3\3\10\0"+
    "\12\3\1\54\17\3\1\0\1\3\2\0\3\3\10\0"+
    "\11\3\1\222\20\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\u01a6\27\3\1\0\1\3\2\0\3\3\10\0"+
    "\20\3\1\u01a7\11\3\1\0\1\3\2\0\3\3\10\0"+
    "\4\3\1\u01a8\25\3\1\0\1\3\2\0\3\3\10\0"+
    "\4\3\1\u01a9\25\3\1\0\1\3\2\0\3\3\10\0"+
    "\7\3\1\u01aa\22\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\u01ab\7\3\1\u01ac\5\3\1\u01ad\5\3\1\u01ae"+
    "\3\3\1\0\1\3\2\0\3\3\10\0\13\3\1\257"+
    "\16\3\1\0\1\3\2\0\3\3\10\0\16\3\1\334"+
    "\13\3\1\0\1\3\2\0\3\3\10\0\11\3\1\53"+
    "\20\3\1\0\1\3\2\0\3\3\10\0\13\3\1\112"+
    "\16\3\1\0\1\3\2\0\3\3\10\0\13\3\1\u0142"+
    "\16\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u01af"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u01b0"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\5\3\1\54"+
    "\1\u01b1\23\3\1\0\1\3\2\0\3\3\10\0\15\3"+
    "\1\u01b2\14\3\1\0\1\3\2\0\3\3\10\0\12\3"+
    "\1\117\6\3\1\u010b\10\3\1\0\1\3\2\0\3\3"+
    "\10\0\13\3\1\u01b3\16\3\1\0\1\3\2\0\3\3"+
    "\10\0\26\3\1\53\3\3\1\0\1\3\11\0\1\u01b4"+
    "\41\0\3\3\10\0\12\3\1\356\17\3\1\0\1\3"+
    "\2\0\3\3\10\0\11\3\1\303\20\3\1\0\1\3"+
    "\2\0\3\3\10\0\11\3\1\u01b5\20\3\1\0\1\3"+
    "\2\0\3\3\10\0\7\3\1\u0188\22\3\1\0\1\3"+
    "\2\0\3\3\10\0\5\3\1\57\24\3\1\0\1\3"+
    "\2\0\3\3\10\0\16\3\1\u01b6\13\3\1\0\1\3"+
    "\2\0\3\3\10\0\7\3\1\u01b7\22\3\1\0\1\3"+
    "\2\0\3\3\10\0\4\3\1\54\25\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\u01b8\31\3\1\0\1\3\2\0"+
    "\3\3\10\0\25\3\1\334\4\3\1\0\1\3\2\0"+
    "\3\3\10\0\13\3\1\u01b9\16\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u01ba\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u01bb\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\6\3\1\u01bc\23\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u01bd\11\3\1\u01be\12\3\1\0"+
    "\1\3\2\0\3\3\10\0\11\3\1\u01bf\20\3\1\0"+
    "\1\3\2\0\3\3\10\0\5\3\1\u01c0\24\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\u01a1\31\3\1\0\1\3"+
    "\2\0\3\3\10\0\10\3\1\u01c1\21\3\1\0\1\3"+
    "\2\0\3\3\10\0\4\3\1\u016a\25\3\1\0\1\3"+
    "\2\0\3\3\10\0\27\3\1\u0108\2\3\1\0\1\3"+
    "\17\0\1\u01c2\33\0\3\3\10\0\10\3\1\54\21\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u01c3\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\20\3\1\u01c4\11\3"+
    "\1\0\1\3\2\0\3\3\10\0\11\3\1\u01c5\20\3"+
    "\1\0\1\3\2\0\3\3\10\0\20\3\1\u01c6\11\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\u010b\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\22\3\1\243\7\3"+
    "\1\0\1\3\2\0\3\3\10\0\12\3\1\u01c7\17\3"+
    "\1\0\1\3\2\0\3\3\10\0\20\3\1\u01c8\2\3"+
    "\1\u01c9\6\3\1\0\1\3\2\0\3\3\10\0\13\3"+
    "\1\334\16\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\u01ab\27\3\1\0\1\3\2\0\3\3\10\0\4\3"+
    "\1\u01ca\25\3\1\0\1\3\2\0\3\3\10\0\5\3"+
    "\1\303\24\3\1\0\1\3\2\0\3\3\10\0\4\3"+
    "\1\u01cb\25\3\1\0\1\3\2\0\3\3\10\0\17\3"+
    "\1\u01cc\12\3\1\0\1\3\2\0\3\3\10\0\6\3"+
    "\1\u01cd\23\3\1\0\1\3\2\0\3\3\10\0\5\3"+
    "\1\u01ce\24\3\1\0\1\3\2\0\3\3\10\0\5\3"+
    "\1\u01cf\3\3\1\u01b8\20\3\1\0\1\3\2\0\3\3"+
    "\10\0\5\3\1\214\24\3\1\0\1\3\2\0\3\3"+
    "\10\0\24\3\1\54\5\3\1\0\1\3\2\0\3\3"+
    "\10\0\16\3\1\u01d0\13\3\1\0\1\3\2\0\3\3"+
    "\10\0\11\3\1\u01d1\20\3\1\0\1\3\2\0\3\3"+
    "\10\0\13\3\1\u01d2\16\3\1\0\1\3\2\0\3\3"+
    "\10\0\5\3\1\334\24\3\1\0\1\3\2\0\3\3"+
    "\10\0\11\3\1\u01c0\20\3\1\0\1\3\2\0\3\3"+
    "\10\0\20\3\1\53\11\3\1\0\1\3\2\0\3\3"+
    "\10\0\7\3\1\u01d3\22\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\u01d4\27\3\1\0\1\3\2\0\3\3"+
    "\10\0\17\3\1\u01d5\12\3\1\0\1\3\2\0\3\3"+
    "\10\0\5\3\1\u0178\24\3\1\0\1\3\2\0\3\3"+
    "\10\0\13\3\1\u01d6\16\3\1\0\1\3\2\0\3\3"+
    "\10\0\6\3\1\u012e\23\3\1\0\1\3\2\0\3\3"+
    "\10\0\17\3\1\334\12\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\365\27\3\1\0\1\3\2\0\3\3"+
    "\10\0\17\3\1\u01d7\12\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\u01d8\27\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\u01d9\27\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\u01da\31\3\1\0\1\3\2\0\3\3\10\0"+
    "\17\3\1\u01db\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\17\3\1\262\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\1\3\1\u01dc\1\3\1\u01dd\1\3\1\u01de\23\3\1\u01df"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u01e0\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u014e\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\u01e1\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\u01e2\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\1\u01e3\31\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\u01e4\25\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\u01e5\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\u01e6\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\u01e7\16\3\1\u01e8\12\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u01e9\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u01ea\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u0163\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\1\u01eb\31\3\1\0"+
    "\1\3\2\0\3\3\10\0\25\3\1\303\4\3\1\0"+
    "\1\3\2\0\3\3\10\0\17\3\1\214\12\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\u01ec\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\11\3\1\u010d\20\3\1\0"+
    "\1\3\2\0\1\u0196\2\3\10\0\1\u01ed\31\3\1\0"+
    "\1\3\2\0\3\3\10\0\24\3\1\u01ee\5\3\1\0"+
    "\1\3\2\0\3\3\10\0\13\3\1\54\16\3\1\0"+
    "\1\3\2\0\3\3\10\0\11\3\1\u01ef\20\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\u01f0\25\3\1\0"+
    "\1\3\2\0\3\3\10\0\17\3\1\u01f1\12\3\1\0"+
    "\1\3\2\0\3\3\10\0\5\3\1\130\24\3\1\0"+
    "\1\3\2\0\3\3\10\0\14\3\1\u01f2\15\3\1\0"+
    "\1\3\2\0\3\3\10\0\7\3\1\u01f3\22\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\104\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\7\3\1\u01f4\22\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\u01f5\25\3\1\0"+
    "\1\3\2\0\3\3\10\0\3\3\1\53\26\3\1\0"+
    "\1\3\2\0\3\3\10\0\12\3\1\u01f6\17\3\1\0"+
    "\1\3\2\0\3\3\10\0\5\3\1\u01f7\14\3\1\243"+
    "\7\3\1\0\1\3\2\0\3\3\10\0\13\3\1\u01f8"+
    "\16\3\1\0\1\3\2\0\3\3\10\0\17\3\1\u01f9"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\5\3\1\214"+
    "\1\u01fa\23\3\1\0\1\3\2\0\3\3\10\0\1\57"+
    "\31\3\1\0\1\3\2\0\3\3\10\0\1\3\1\u01fb"+
    "\30\3\1\0\1\3\2\0\3\3\10\0\20\3\1\243"+
    "\11\3\1\0\1\3\2\0\3\3\10\0\12\3\1\214"+
    "\17\3\1\0\1\3\2\0\3\3\10\0\5\3\1\u01fc"+
    "\24\3\1\0\1\3\2\0\3\3\10\0\17\3\1\u01fd"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\6\3\1\u01fe"+
    "\23\3\1\0\1\3\2\0\3\3\10\0\17\3\1\u01ff"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\25\3\1\u0200"+
    "\4\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u0201"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\1\3\1\u018f"+
    "\30\3\1\0\1\3\2\0\3\3\10\0\2\3\1\u0202"+
    "\27\3\1\0\1\3\2\0\3\3\10\0\7\3\1\u0203"+
    "\22\3\1\0\1\3\2\0\3\3\10\0\5\3\1\u0204"+
    "\24\3\1\0\1\3\2\0\3\3\10\0\1\53\10\3"+
    "\1\u01f8\20\3\1\0\1\3\2\0\3\3\10\0\4\3"+
    "\1\356\25\3\1\0\1\3\2\0\3\3\10\0\1\u0205"+
    "\31\3\1\0\1\3\2\0\3\3\10\0\14\3\1\u018b"+
    "\15\3\1\0\1\3\2\0\3\3\10\0\2\3\1\u015c"+
    "\27\3\1\0\1\3\2\0\3\3\10\0\2\3\1\u0206"+
    "\27\3\1\0\1\3\2\0\3\3\10\0\17\3\1\u0207"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\2\3\1\u0208"+
    "\27\3\1\0\1\3\2\0\3\3\10\0\5\3\1\u0209"+
    "\24\3\1\0\1\3\2\0\3\3\10\0\1\76\31\3"+
    "\1\0\1\3\2\0\3\3\10\0\5\3\1\54\24\3"+
    "\1\0\1\3\2\0\3\3\10\0\7\3\1\214\22\3"+
    "\1\0\1\3\2\0\3\3\10\0\5\3\1\u020a\24\3"+
    "\1\0\1\3\2\0\3\3\10\0\17\3\1\u020b\12\3"+
    "\1\0\1\3\2\0\3\3\10\0\11\3\1\u01ff\20\3"+
    "\1\0\1\3\2\0\3\3\10\0\17\3\1\u020c\12\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\u01a1\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\u020d\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\334\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u020e\25\3"+
    "\1\0\1\3\20\0\1\u020f\32\0\3\3\10\0\20\3"+
    "\1\u0210\11\3\1\0\1\3\2\0\3\3\10\0\17\3"+
    "\1\207\12\3\1\0\1\3\2\0\3\3\10\0\5\3"+
    "\1\u0176\24\3\1\0\1\3\2\0\3\3\10\0\1\u0107"+
    "\6\3\1\u0186\22\3\1\0\1\3\2\0\3\3\10\0"+
    "\11\3\1\u0211\20\3\1\0\1\3\2\0\3\3\10\0"+
    "\4\3\1\u0212\25\3\1\0\1\3\2\0\3\3\10\0"+
    "\11\3\1\u0213\20\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\115\27\3\1\0\1\3\2\0\3\3\10\0"+
    "\17\3\1\177\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\12\3\1\u019e\17\3\1\0\1\3\2\0\3\3\10\0"+
    "\14\3\1\u0214\15\3\1\0\1\3\2\0\3\3\10\0"+
    "\2\3\1\u0215\27\3\1\0\1\3\2\0\3\3\10\0"+
    "\17\3\1\u01a1\12\3\1\0\1\3\2\0\3\3\10\0"+
    "\1\u01d4\31\3\1\0\1\3\2\0\3\3\10\0\13\3"+
    "\1\365\16\3\1\0\1\3\2\0\3\3\10\0\17\3"+
    "\1\u0216\12\3\1\0\1\3\2\0\3\3\10\0\13\3"+
    "\1\360\16\3\1\0\1\3\2\0\3\3\10\0\12\3"+
    "\1\u0113\17\3\1\0\1\3\2\0\3\3\10\0\14\3"+
    "\1\53\15\3\1\0\1\3\2\0\3\3\10\0\1\376"+
    "\31\3\1\0\1\3\2\0\3\3\10\0\20\3\1\245"+
    "\11\3\1\0\1\3\2\0\3\3\10\0\5\3\1\177"+
    "\24\3\1\0\1\3\2\0\3\3\10\0\1\3\1\u0217"+
    "\30\3\1\0\1\3\2\0\3\3\10\0\5\3\1\221"+
    "\24\3\1\0\1\3\2\0\3\3\10\0\7\3\1\u0218"+
    "\22\3\1\0\1\3\2\0\3\3\10\0\1\u0219\31\3"+
    "\1\0\1\3\2\0\3\3\10\0\25\3\1\u0108\4\3"+
    "\1\0\1\3\2\0\3\3\10\0\11\3\1\u021a\20\3"+
    "\1\0\1\3\2\0\3\3\10\0\13\3\1\u021b\16\3"+
    "\1\0\1\3\2\0\3\3\10\0\1\u021c\31\3\1\0"+
    "\1\3\2\0\3\3\10\0\11\3\1\63\20\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\3\1\u021d\30\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\u021e\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\20\3\1\u0124\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\20\3\1\u021f\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\17\3\1\u0220\12\3\1\0"+
    "\1\3\2\0\3\3\10\0\6\3\1\u018e\23\3\1\0"+
    "\1\3\2\0\3\3\10\0\12\3\1\u01c1\17\3\1\0"+
    "\1\3\2\0\3\3\10\0\5\3\1\u0221\24\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\u0222\25\3\1\0"+
    "\1\3\2\0\3\3\10\0\6\3\1\u0223\23\3\1\0"+
    "\1\3\2\0\3\3\10\0\12\3\1\u0224\17\3\1\0"+
    "\1\3\2\0\3\3\10\0\10\3\1\u0225\21\3\1\0"+
    "\1\3\2\0\3\3\10\0\26\3\1\303\3\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\u0226\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\22\3\1\303\7\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\u0227\31\3\1\0\1\3"+
    "\2\0\3\3\10\0\11\3\1\u01d4\20\3\1\0\1\3"+
    "\2\0\3\3\10\0\2\3\1\u0228\27\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\u0229\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\u022a\31\3\1\0\1\3\2\0"+
    "\3\3\10\0\20\3\1\u011f\6\3\1\334\2\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\3\1\54\30\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\u022b\31\3\1\0\1\3"+
    "\2\0\3\3\10\0\20\3\1\u022c\11\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\356\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\u022d\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\11\3\1\u022e\20\3\1\0\1\3"+
    "\2\0\3\3\10\0\4\3\1\u022f\25\3\1\0\1\3"+
    "\2\0\3\3\10\0\20\3\1\u0230\11\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\53\31\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u010b\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\25\3\1\u0231\4\3\1\0\1\3\2\0"+
    "\3\3\10\0\17\3\1\365\12\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u018b\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u0232\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\27\3\1\243\2\3\1\0\1\3\2\0"+
    "\3\3\10\0\6\3\1\u0233\23\3\1\0\1\3\2\0"+
    "\3\3\10\0\17\3\1\u0234\12\3\1\0\1\3\2\0"+
    "\3\3\10\0\1\260\1\3\1\333\27\3\1\0\1\3"+
    "\2\0\3\3\10\0\10\3\1\u022a\5\3\1\54\13\3"+
    "\1\0\1\3\2\0\3\3\10\0\16\3\1\u0235\13\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\u011f\23\3"+
    "\1\0\1\3\17\0\1\u0236\33\0\3\3\10\0\1\u0237"+
    "\31\3\1\0\1\3\2\0\3\3\10\0\6\3\1\u0238"+
    "\23\3\1\0\1\3\2\0\3\3\10\0\1\70\31\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\u0239\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\17\3\1\u023a\12\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\u023b\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\1\3\1\u023c\30\3"+
    "\1\0\1\3\2\0\3\3\10\0\13\3\1\u01b8\16\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u023d\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u023e\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\26\3\1\u023f\3\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u01da\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\10\3\1\u016a\21\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u0240\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\5\3\1\u0241\24\3"+
    "\1\0\1\3\2\0\3\3\10\0\10\3\1\u0242\21\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\u0243\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\1\u0244\31\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\53\14\3\1\u013c"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u0245"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u0246"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\11\3\1\u0203"+
    "\20\3\1\0\1\3\2\0\3\3\10\0\3\3\1\u0247"+
    "\26\3\1\0\1\3\2\0\3\3\10\0\12\3\1\u022a"+
    "\17\3\1\0\1\3\2\0\3\3\10\0\6\3\1\u0248"+
    "\23\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u0249"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u018b"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\7\3\1\u024a"+
    "\22\3\1\0\1\3\2\0\3\3\10\0\17\3\1\u015e"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u024b"+
    "\25\3\1\0\1\3\2\0\3\3\10\0\6\3\1\u024c"+
    "\23\3\1\0\1\3\2\0\3\3\10\0\17\3\1\u024d"+
    "\12\3\1\0\1\3\2\0\3\3\10\0\4\3\1\u024e"+
    "\25\3\1\0\1\3\2\0\1\u024f\2\3\10\0\32\3"+
    "\1\0\1\3\2\0\3\3\10\0\6\3\1\u010b\23\3"+
    "\1\0\1\3\2\0\3\3\10\0\22\3\1\u0250\7\3"+
    "\1\0\1\3\2\0\3\3\10\0\23\3\1\u019e\6\3"+
    "\1\0\1\3\2\0\3\3\10\0\13\3\1\u0251\16\3"+
    "\1\0\1\3\27\0\1\u0252\23\0\3\3\10\0\25\3"+
    "\1\u0253\4\3\1\0\1\3\2\0\3\3\10\0\27\3"+
    "\1\u0185\2\3\1\0\1\3\2\0\3\3\10\0\2\3"+
    "\1\u0254\27\3\1\0\1\3\2\0\3\3\10\0\22\3"+
    "\1\u0217\7\3\1\0\1\3\2\0\3\3\10\0\12\3"+
    "\1\323\17\3\1\0\1\3\2\0\3\3\10\0\12\3"+
    "\1\u0255\17\3\1\0\1\3\2\0\3\3\10\0\22\3"+
    "\1\323\7\3\1\0\1\3\2\0\3\3\10\0\1\u0256"+
    "\31\3\1\0\1\3\2\0\3\3\10\0\20\3\1\u0257"+
    "\11\3\1\0\1\3\2\0\3\3\10\0\2\3\1\333"+
    "\27\3\1\0\1\3\2\0\3\3\10\0\11\3\1\u0258"+
    "\20\3\1\0\1\3\2\0\3\3\10\0\20\3\1\u0259"+
    "\11\3\1\0\1\3\2\0\3\3\10\0\17\3\1\u025a"+
    "\12\3\1\0\1\3\2\0\1\u025b\2\3\10\0\32\3"+
    "\1\0\1\3\2\0\3\3\10\0\2\3\1\u025c\27\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u0259\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\22\3\1\170\7\3"+
    "\1\0\1\3\2\0\3\3\10\0\21\3\1\u025d\10\3"+
    "\1\0\1\3\2\0\3\3\10\0\21\3\1\u025e\10\3"+
    "\1\0\1\3\2\0\3\3\10\0\12\3\1\u025f\17\3"+
    "\1\0\1\3\2\0\3\3\10\0\17\3\1\u0260\12\3"+
    "\1\0\1\3\2\0\3\3\10\0\5\3\1\u0261\24\3"+
    "\1\0\1\3\2\0\3\3\10\0\4\3\1\u0241\25\3"+
    "\1\0\1\3\2\0\3\3\10\0\10\3\1\112\21\3"+
    "\1\0\1\3\2\0\1\u0262\2\3\10\0\32\3\1\0"+
    "\1\3\2\0\3\3\10\0\11\3\1\u0108\20\3\1\0"+
    "\1\3\2\0\3\3\10\0\20\3\1\u0263\11\3\1\0"+
    "\1\3\2\0\3\3\10\0\2\3\1\214\27\3\1\0"+
    "\1\3\2\0\3\3\10\0\6\3\1\331\23\3\1\0"+
    "\1\3\2\0\3\3\10\0\4\3\1\u0264\25\3\1\0"+
    "\1\3\2\0\3\3\10\0\6\3\1\u0265\23\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\3\1\356\2\3\1\u0266"+
    "\6\3\1\u01a0\16\3\1\0\1\3\2\0\3\3\10\0"+
    "\5\3\1\u0114\24\3\1\0\1\3\2\0\1\u0267\2\3"+
    "\10\0\12\3\1\u0255\17\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\u0268\31\3\1\0\1\3\2\0\3\3\10\0"+
    "\20\3\1\u0269\3\3\1\u026a\5\3\1\0\1\3\2\0"+
    "\3\3\10\0\12\3\1\u016a\17\3\1\0\1\3\2\0"+
    "\3\3\10\0\11\3\1\u012c\20\3\1\0\1\3\2\0"+
    "\3\3\10\0\15\3\1\u026b\7\3\1\u026c\4\3\1\0"+
    "\1\3\2\0\3\3\10\0\11\3\1\u026d\20\3\1\0"+
    "\1\3\2\0\3\3\10\0\1\260\31\3\1\0\1\3"+
    "\2\0\3\3\10\0\4\3\1\u0208\25\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\u026e\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\u026f\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\13\3\1\u0270\16\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\u0271\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\2\3\1\u0272\27\3\1\0\1\3"+
    "\2\0\3\3\10\0\11\3\1\u0273\20\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\u0274\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\13\3\1\u0275\16\3\1\0\1\3"+
    "\2\0\3\3\10\0\25\3\1\u0276\4\3\1\0\1\3"+
    "\2\0\3\3\10\0\6\3\1\u0277\23\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\3\1\u0189\30\3\1\0\1\3"+
    "\2\0\3\3\10\0\25\3\1\u0278\4\3\1\0\1\3"+
    "\2\0\3\3\10\0\21\3\1\u0279\10\3\1\0\1\3"+
    "\2\0\3\3\10\0\13\3\1\u010d\16\3\1\0\1\3"+
    "\2\0\3\3\10\0\6\3\1\u0188\23\3\1\0\1\3"+
    "\2\0\3\3\10\0\5\3\1\u0124\24\3\1\0\1\3"+
    "\2\0\3\3\10\0\2\3\1\u027a\27\3\1\0\1\3"+
    "\2\0\3\3\10\0\20\3\1\u0185\11\3\1\0\1\3"+
    "\2\0\3\3\10\0\17\3\1\u027b\12\3\1\0\1\3"+
    "\2\0\3\3\10\0\10\3\1\u027c\21\3\1\0\1\3"+
    "\2\0\3\3\10\0\20\3\1\u01c8\11\3\1\0\1\3"+
    "\2\0\3\3\10\0\7\3\1\u027d\22\3\1\0\1\3"+
    "\2\0\3\3\10\0\15\3\1\u027e\14\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\u027f\31\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u0280\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\5\3\1\u0281\24\3\1\0\1\3\2\0"+
    "\3\3\10\0\1\u0282\31\3\1\0\1\3\2\0\3\3"+
    "\10\0\17\3\1\u0283\12\3\1\0\1\3\2\0\3\3"+
    "\10\0\20\3\1\u0284\11\3\1\0\1\3\2\0\3\3"+
    "\10\0\4\3\1\u0285\25\3\1\0\1\3\2\0\3\3"+
    "\10\0\2\3\1\u0286\27\3\1\0\1\3\2\0\3\3"+
    "\10\0\21\3\1\u0287\10\3\1\0\1\3\2\0\3\3"+
    "\10\0\1\3\1\u0288\2\3\1\u0264\25\3\1\0\1\3"+
    "\2\0\3\3\10\0\2\3\1\u0289\27\3\1\0\1\3"+
    "\2\0\3\3\10\0\4\3\1\u028a\25\3\1\0\1\3"+
    "\2\0\3\3\10\0\1\u028b\31\3\1\0\1\3\2\0"+
    "\3\3\10\0\17\3\1\u028c\12\3\1\0\1\3\2\0"+
    "\3\3\10\0\7\3\1\u028d\22\3\1\0\1\3\2\0"+
    "\3\3\10\0\20\3\1\u0286\11\3\1\0\1\3\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[25830];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\3\1\3\11\1\1\1\11\34\1\1\0"+
    "\1\1\1\0\165\1\1\0\1\1\2\0\225\1\2\0"+
    "\1\11\25\1\1\0\143\1\1\11\15\1\1\0\114\1"+
    "\1\0\46\1\1\0\33\1\1\11\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[653];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Alexico(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Alexico(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 138) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 3: 
          { lexeme=yytext(); return Int
          }
        case 15: break;
        case 10: 
          { lexeme=yytext(); return Bit
          }
        case 16: break;
        case 1: 
          { return ERROR;
          }
        case 17: break;
        case 8: 
          { return Division;
          }
        case 18: break;
        case 5: 
          { return Suma;
          }
        case 19: break;
        case 9: 
          { return Igual;
          }
        case 20: break;
        case 13: 
          { lexeme=yytext(); return Reservadas;
          }
        case 21: break;
        case 11: 
          { lexeme=yytext(); return String
          }
        case 22: break;
        case 7: 
          { return Multiplicacion;
          }
        case 23: break;
        case 14: 
          { lexeme=yytext(); return Numero;
          }
        case 24: break;
        case 6: 
          { return Resta;
          }
        case 25: break;
        case 4: 
          { /*Ignore*/
          }
        case 26: break;
        case 12: 
          { lexeme=yytext(); return Comentario
          }
        case 27: break;
        case 2: 
          { lexeme=yytext(); return Identificador;
          }
        case 28: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
