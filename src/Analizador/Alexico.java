/* The following code was generated by JFlex 1.4.3 on 22/09/19 04:55 PM */

package Analizador;
import static Analizador.Tokens.*;

/* Secci√≥n de declaraciones de JFlex */

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 22/09/19 04:55 PM from the specification file
 * <tt>C:/Users/josue/Documents/NetBeansProjects/Proyecto_Compiladores/Proyecto_Compiladores/src/Analizador/Alexico.flex</tt>
 */
class Alexico {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\4\1\65\2\0\1\66\22\0\1\4\1\15\1\0\1\32"+
    "\1\0\1\11\1\16\1\70\1\25\1\26\1\7\1\5\1\21\1\6"+
    "\1\22\1\10\1\67\1\67\10\2\1\0\1\20\1\12\1\13\1\14"+
    "\1\72\1\31\1\33\1\51\1\45\1\34\1\35\1\47\1\55\1\50"+
    "\1\52\1\63\1\57\1\42\1\60\1\41\1\44\1\43\1\64\1\40"+
    "\1\53\1\37\1\46\1\62\1\61\1\36\1\54\1\56\1\23\1\0"+
    "\1\24\1\0\1\3\1\0\4\1\1\71\25\1\1\27\1\17\1\30"+
    "\101\0\1\73\uff40\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\1"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\30\2\1\32\1\1\1\33\1\34"+
    "\1\35\1\3\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\1\51\1\2\1\52"+
    "\6\2\1\52\20\2\1\52\12\2\1\52\15\2\2\52"+
    "\3\2\1\52\32\2\2\52\21\2\1\52\17\2\1\53"+
    "\1\54\2\35\1\37\2\0\1\2\1\52\7\2\1\52"+
    "\15\2\1\52\57\2\1\52\24\2\1\52\5\2\1\52"+
    "\16\2\1\52\2\2\1\52\6\2\1\52\14\2\1\52"+
    "\4\2\1\52\7\2\2\0\14\2\1\52\10\2\1\0"+
    "\4\2\1\52\3\2\1\52\2\2\1\52\20\2\1\52"+
    "\7\2\1\52\3\2\1\52\2\2\1\52\17\2\1\52"+
    "\44\2\2\52\1\2\2\36\15\2\1\0\1\52\52\2"+
    "\1\52\31\2\1\52\5\2\1\52\1\0\46\2\1\0"+
    "\11\2\1\52\4\2\1\52\6\2\1\52\5\2\1\52"+
    "\6\2\1\52\3\2\1\52\34\2\1\52\23\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[685];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\74\0\170\0\264\0\74\0\360\0\u012c\0\u0168"+
    "\0\74\0\u01a4\0\74\0\u01e0\0\u021c\0\u0258\0\u0294\0\u02d0"+
    "\0\u030c\0\74\0\74\0\74\0\u0348\0\74\0\u0384\0\74"+
    "\0\u03c0\0\74\0\74\0\u03fc\0\u0438\0\u0474\0\u04b0\0\u04ec"+
    "\0\u0528\0\u0564\0\u05a0\0\u05dc\0\u0618\0\u0654\0\u0690\0\u06cc"+
    "\0\u0708\0\u0744\0\u0780\0\u07bc\0\u07f8\0\u0834\0\u0870\0\u08ac"+
    "\0\u08e8\0\u0924\0\u0960\0\u099c\0\264\0\u09d8\0\74\0\74"+
    "\0\u0a14\0\u012c\0\u0a50\0\u0a8c\0\74\0\74\0\74\0\74"+
    "\0\74\0\74\0\74\0\74\0\74\0\74\0\u0ac8\0\170"+
    "\0\u0b04\0\u0b40\0\u0b7c\0\u0bb8\0\u0bf4\0\u0c30\0\u0c6c\0\u0ca8"+
    "\0\u0ce4\0\u0d20\0\u0d5c\0\u0d98\0\u0dd4\0\u0e10\0\u0e4c\0\u0e88"+
    "\0\u0ec4\0\u0f00\0\u0f3c\0\u0f78\0\u0fb4\0\u0ff0\0\u102c\0\u1068"+
    "\0\u10a4\0\u10e0\0\u111c\0\u1158\0\u1194\0\u11d0\0\u120c\0\u1248"+
    "\0\u1284\0\u12c0\0\u12fc\0\u1338\0\u1374\0\u13b0\0\u13ec\0\u1428"+
    "\0\u1464\0\u14a0\0\u14dc\0\u1518\0\u1554\0\u1590\0\u15cc\0\u1608"+
    "\0\u1644\0\u1680\0\u16bc\0\u16f8\0\u1734\0\u1770\0\u17ac\0\u17e8"+
    "\0\u1824\0\u1860\0\u189c\0\u18d8\0\u1914\0\u1950\0\u198c\0\u19c8"+
    "\0\u1a04\0\u1a40\0\u1a7c\0\u1ab8\0\u1af4\0\u1b30\0\u1b6c\0\u1ba8"+
    "\0\u1be4\0\u1c20\0\u1c5c\0\u1c98\0\u1cd4\0\u1d10\0\u1d4c\0\u1d88"+
    "\0\u1dc4\0\u1e00\0\u1e3c\0\u1e78\0\u1eb4\0\u1ef0\0\u1f2c\0\u1f68"+
    "\0\u1fa4\0\u1fe0\0\u201c\0\u2058\0\u2094\0\u20d0\0\u210c\0\u2148"+
    "\0\u2184\0\u21c0\0\u21fc\0\u2238\0\u2274\0\u22b0\0\u22ec\0\u2328"+
    "\0\u2364\0\u23a0\0\u23dc\0\u2418\0\u2454\0\u2490\0\u24cc\0\u2508"+
    "\0\u2544\0\u2580\0\u25bc\0\u09d8\0\74\0\u25f8\0\u2634\0\u2670"+
    "\0\u26ac\0\u26e8\0\u2724\0\u2760\0\u279c\0\u27d8\0\u2814\0\u2850"+
    "\0\u288c\0\u28c8\0\u2904\0\u2940\0\u297c\0\u29b8\0\u1068\0\u29f4"+
    "\0\u2a30\0\u2a6c\0\u2aa8\0\u2ae4\0\u2b20\0\u2b5c\0\u2b98\0\u2bd4"+
    "\0\u2c10\0\u2c4c\0\u2c88\0\u2cc4\0\u2d00\0\u2d3c\0\u2d78\0\u2db4"+
    "\0\u2df0\0\u2e2c\0\u2e68\0\u2ea4\0\u2ee0\0\u2f1c\0\u2f58\0\u2f94"+
    "\0\u2fd0\0\u300c\0\u3048\0\u3084\0\u30c0\0\u30fc\0\u3138\0\u3174"+
    "\0\u31b0\0\u31ec\0\u3228\0\u3264\0\u32a0\0\u32dc\0\u3318\0\u3354"+
    "\0\u3390\0\u33cc\0\u3408\0\u3444\0\u3480\0\u34bc\0\u34f8\0\u3534"+
    "\0\u3570\0\u35ac\0\u35e8\0\u3624\0\u3660\0\u369c\0\u36d8\0\u3714"+
    "\0\u3750\0\u378c\0\u37c8\0\u3804\0\u3840\0\u387c\0\u38b8\0\u38f4"+
    "\0\u3930\0\u396c\0\u39a8\0\u39e4\0\u3a20\0\u3a5c\0\u3a98\0\u3ad4"+
    "\0\u3b10\0\u3b4c\0\u3b88\0\u3bc4\0\u3c00\0\u3c3c\0\u3c78\0\u3cb4"+
    "\0\u3cf0\0\u3d2c\0\u3d68\0\u3da4\0\u3de0\0\u3e1c\0\u3e58\0\u3e94"+
    "\0\u3ed0\0\u3f0c\0\u3f48\0\u3f84\0\u3c78\0\u3fc0\0\u3ffc\0\u4038"+
    "\0\u4074\0\u40b0\0\u40ec\0\u4128\0\u4164\0\u41a0\0\u41dc\0\u4218"+
    "\0\u4254\0\u4290\0\u42cc\0\u4308\0\u4344\0\u4380\0\u43bc\0\u43f8"+
    "\0\u4434\0\u4470\0\u44ac\0\u44e8\0\u4524\0\u4560\0\u459c\0\u45d8"+
    "\0\u4614\0\u4650\0\u468c\0\u46c8\0\u4704\0\u4740\0\u477c\0\u47b8"+
    "\0\u47f4\0\u4830\0\u486c\0\u48a8\0\u48e4\0\u4920\0\u495c\0\u4998"+
    "\0\u49d4\0\u4a10\0\u4a4c\0\u4a88\0\u4ac4\0\u4b00\0\u4b3c\0\u4b78"+
    "\0\u4bb4\0\u4bf0\0\u4c2c\0\u4c68\0\u4ca4\0\u4ce0\0\u4d1c\0\u4d58"+
    "\0\u4d94\0\u4dd0\0\u4e0c\0\u4e48\0\u4e84\0\u4ec0\0\u4efc\0\u4f38"+
    "\0\u4f74\0\u4fb0\0\u4fec\0\u5028\0\u5064\0\u50a0\0\u50dc\0\u5118"+
    "\0\u5154\0\u5190\0\u51cc\0\u5208\0\u5244\0\u5280\0\u52bc\0\u52f8"+
    "\0\u5334\0\u5370\0\u53ac\0\u53e8\0\u5424\0\u5460\0\u549c\0\u54d8"+
    "\0\u5514\0\u5550\0\u558c\0\u55c8\0\u5604\0\u5640\0\u567c\0\u56b8"+
    "\0\u56f4\0\u5730\0\u576c\0\u57a8\0\u57e4\0\u5820\0\u585c\0\u5898"+
    "\0\u58d4\0\u5910\0\u594c\0\u5988\0\u59c4\0\u5a00\0\u5a3c\0\u5a78"+
    "\0\u5ab4\0\u5af0\0\u5b2c\0\u5b68\0\u5ba4\0\u5be0\0\u47b8\0\u5c1c"+
    "\0\u5c58\0\u5c94\0\u5cd0\0\u5d0c\0\u5d48\0\u5d84\0\u5dc0\0\u5dfc"+
    "\0\u5e38\0\u5e74\0\u5eb0\0\u5eec\0\u5f28\0\u5f64\0\u5fa0\0\u5fdc"+
    "\0\u6018\0\u6054\0\u6090\0\u60cc\0\u6108\0\u6144\0\u6180\0\u61bc"+
    "\0\u61f8\0\u6234\0\u6270\0\u62ac\0\u62e8\0\u6324\0\u6360\0\u639c"+
    "\0\u63d8\0\u6414\0\u6450\0\u648c\0\u64c8\0\u6504\0\u6540\0\u657c"+
    "\0\u65b8\0\u65f4\0\74\0\u26e8\0\u6630\0\u666c\0\u2760\0\u66a8"+
    "\0\u66e4\0\u6720\0\u675c\0\u6798\0\u67d4\0\u6810\0\u684c\0\u6888"+
    "\0\u68c4\0\u6900\0\u693c\0\u6978\0\u69b4\0\u69f0\0\u6a2c\0\u6a68"+
    "\0\u6aa4\0\u6ae0\0\u6b1c\0\u6b58\0\u6b94\0\u6bd0\0\u6c0c\0\u6c48"+
    "\0\u6c84\0\u6cc0\0\u6cfc\0\u6d38\0\u6d74\0\u6db0\0\u6dec\0\u6e28"+
    "\0\u6e64\0\u6ea0\0\u6edc\0\u6f18\0\u6f54\0\u6f90\0\u6fcc\0\u4128"+
    "\0\u7008\0\u7044\0\u7080\0\u70bc\0\u70f8\0\u7134\0\u7170\0\u71ac"+
    "\0\u71e8\0\u7224\0\u7260\0\u729c\0\u72d8\0\u7314\0\u7350\0\u738c"+
    "\0\u73c8\0\u7404\0\u7440\0\u747c\0\u74b8\0\u74f4\0\u7530\0\u756c"+
    "\0\u75a8\0\u75e4\0\u7620\0\u765c\0\u7698\0\u76d4\0\u7710\0\u774c"+
    "\0\u7788\0\u77c4\0\u7800\0\u783c\0\u7878\0\u78b4\0\u78f0\0\u5514"+
    "\0\u792c\0\u7968\0\u79a4\0\u79e0\0\u7a1c\0\u279c\0\u7a58\0\u7a94"+
    "\0\u7ad0\0\u7b0c\0\u7b48\0\u7b84\0\u7bc0\0\u7bfc\0\u7c38\0\u7c74"+
    "\0\u7cb0\0\u7cec\0\u7d28\0\u7d64\0\u7da0\0\u7ddc\0\u7e18\0\u7e54"+
    "\0\u7e90\0\u7ecc\0\u7f08\0\u7f44\0\u7f80\0\u7fbc\0\u7ff8\0\u8034"+
    "\0\u8070\0\u80ac\0\u80e8\0\u8124\0\u8160\0\u819c\0\u81d8\0\u8214"+
    "\0\u8250\0\u828c\0\u82c8\0\u8304\0\u8340\0\u837c\0\u83b8\0\u83f4"+
    "\0\u8430\0\u846c\0\u84a8\0\u84e4\0\u8520\0\u855c\0\u8598\0\u3408"+
    "\0\u85d4\0\u8610\0\u864c\0\u8688\0\u86c4\0\u8700\0\u873c\0\u8778"+
    "\0\u87b4\0\u1680\0\u87f0\0\u8250\0\u882c\0\u8868\0\u4380\0\u88a4"+
    "\0\u88e0\0\74\0\u891c\0\u8958\0\u8994\0\u89d0\0\u8a0c\0\u8a48"+
    "\0\u8a84\0\u8ac0\0\u8afc\0\u8b38\0\u8b74\0\u8bb0\0\u8bec\0\u8c28"+
    "\0\u8c64\0\u8ca0\0\u8cdc\0\u8d18\0\u8d54\0\u8d90\0\u8dcc\0\u8e08"+
    "\0\u8e44\0\u8e80\0\u8ebc\0\u8ef8\0\u8f34\0\u8f70\0\u8fac\0\u8fe8"+
    "\0\u9024\0\u9060\0\u909c\0\u90d8\0\u9114\0\u9150\0\u918c\0\u91c8"+
    "\0\u9204\0\u9240\0\u927c\0\u92b8\0\u92f4\0\u9330\0\u936c\0\u93a8"+
    "\0\u93e4\0\u9420\0\u945c\0\u9498\0\u94d4\0\u8a84\0\u9510\0\u954c"+
    "\0\u9588\0\u95c4\0\u9600\0\u963c\0\u9678";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[685];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\1\33\1\34\1\35\1\36\1\37\1\3\1\40"+
    "\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60"+
    "\1\61\1\62\1\63\1\64\1\3\2\6\1\65\1\66"+
    "\1\3\1\67\1\70\75\0\3\3\27\0\32\3\2\0"+
    "\1\3\1\0\1\3\4\0\1\4\17\0\1\71\44\0"+
    "\1\4\10\0\1\6\60\0\2\6\7\0\1\72\64\0"+
    "\1\72\6\0\1\72\3\0\1\73\60\0\1\72\13\0"+
    "\1\74\77\0\1\75\73\0\1\76\73\0\1\77\73\0"+
    "\1\100\76\0\1\101\74\0\1\102\100\0\1\103\75\0"+
    "\1\104\75\0\1\105\75\0\1\106\42\0\3\3\27\0"+
    "\1\3\1\107\2\3\1\110\1\111\1\112\1\113\2\3"+
    "\1\114\1\115\2\3\1\116\1\3\1\117\6\3\1\120"+
    "\2\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\121\1\3\1\122\2\3\1\123\3\3\1\124\1\3"+
    "\1\125\2\3\1\126\1\127\12\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\3\3\1\130\1\3\1\131"+
    "\1\132\1\133\10\3\1\134\11\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\135\1\3\1\136\2\3"+
    "\1\137\3\3\1\140\3\3\1\141\1\3\1\142\1\143"+
    "\11\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\144\1\3\1\145\6\3\1\146\1\3\1\147\3\3"+
    "\1\150\12\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\1\151\1\3\1\152\6\3\1\153\1\154\1\155"+
    "\16\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\156\1\3\1\157\6\3\1\160\5\3\1\161\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\162"+
    "\1\3\1\163\2\3\1\164\1\3\1\165\1\3\1\166"+
    "\1\3\1\167\3\3\1\170\12\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\171\1\172\1\3"+
    "\1\173\1\3\1\174\1\175\1\176\12\3\1\177\2\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\200"+
    "\4\3\1\201\1\3\1\202\1\3\1\203\1\3\1\204"+
    "\1\3\1\205\14\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\6\3\1\206\1\3\1\207\7\3\1\210"+
    "\11\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\211\1\3\1\212\2\3\1\213\1\3\1\214\1\3"+
    "\1\215\1\3\1\216\3\3\1\217\12\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\220\10\3\1\221"+
    "\20\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\222\1\3\1\223\2\3\1\224\3\3\1\225\1\3"+
    "\1\226\3\3\1\227\1\3\1\110\10\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\3\1\230\4\3"+
    "\1\231\5\3\1\110\3\3\1\232\4\3\1\233\4\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\234"+
    "\1\3\1\235\1\3\1\236\3\3\1\237\1\240\1\241"+
    "\1\242\1\3\1\243\1\3\1\244\1\3\1\245\3\3"+
    "\1\246\3\3\1\247\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\2\3\1\250\27\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\251\2\3\1\252"+
    "\1\3\1\253\1\3\1\254\20\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\11\3\1\255\20\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\256"+
    "\14\3\1\257\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\260\1\3\1\261\6\3\1\262\5\3"+
    "\1\263\12\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\1\264\4\3\1\265\3\3\1\266\3\3\1\267"+
    "\1\3\1\270\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\271\16\3\1\272\12\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\11\3\1\273\20\3"+
    "\2\0\1\3\1\0\1\3\2\0\65\274\2\0\1\274"+
    "\1\275\3\274\2\0\1\71\2\0\2\276\26\0\1\277"+
    "\31\0\1\71\1\0\1\277\2\0\65\73\1\0\6\73"+
    "\7\300\1\301\12\300\1\301\42\300\2\302\5\300\1\0"+
    "\3\3\27\0\2\110\30\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\110\27\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\3\1\110\17\3"+
    "\1\110\10\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\4\3\1\303\2\3\1\304\22\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\4\3\1\305\25\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\4\3"+
    "\1\306\25\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\20\3\1\307\11\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\12\3\1\110\5\3\1\310\11\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\22\3"+
    "\1\110\7\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\4\3\1\311\14\3\1\110\10\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\312\5\3\1\256"+
    "\1\313\2\3\1\314\1\3\1\315\3\3\1\316\11\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\11\3"+
    "\1\317\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\13\3\1\320\11\3\1\321\4\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\25\3\1\317\4\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\12\3"+
    "\1\322\17\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\1\323\17\3\1\324\11\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\325\1\3\1\326"+
    "\5\3\1\327\4\3\1\330\12\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\331\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\3\1\332"+
    "\30\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\20\3\1\111\11\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\12\3\1\333\17\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\16\3\1\334\13\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\3\3\1\335"+
    "\21\3\1\336\4\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\337\12\3\1\340\3\3\1\341\1\3"+
    "\1\342\10\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\10\3\1\110\21\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\343\27\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\25\3\1\344\4\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\345\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\17\3\1\346\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\347\3\3\1\350\2\3\1\351"+
    "\1\352\1\3\1\353\1\3\1\354\3\3\1\355\6\3"+
    "\1\356\2\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\7\3\1\357\16\3\1\360\3\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\7\3\1\111\22\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\22\3"+
    "\1\361\7\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\4\3\1\362\20\3\1\363\4\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\3\3\1\251\26\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\4\3"+
    "\1\110\1\3\1\364\3\3\1\365\17\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\15\3\1\250\14\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\7\3"+
    "\1\366\15\3\1\367\4\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\6\3\1\370\11\3\1\251\11\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\371"+
    "\13\3\1\251\12\3\1\372\2\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\373\11\3\1\374\13\3"+
    "\1\303\3\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\6\3\1\375\15\3\1\111\5\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\3\1\110\3\3"+
    "\1\376\12\3\1\377\11\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\5\3\1\u0100\24\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u0101\6\3"+
    "\1\u0102\5\3\1\u0103\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\343\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\20\3\1\u0104\11\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\16\3\1\u0105"+
    "\13\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\27\3\1\u0106\2\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\3\1\303\30\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\7\3\1\256\22\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\u0107"+
    "\1\3\1\305\25\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u0108\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u0109\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\14\3\1\u010a"+
    "\15\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\2\3\1\u010b\27\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u010c\13\3\1\u010d\11\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\u010e"+
    "\6\3\1\u010f\20\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\11\3\1\133\1\3\1\u0110\16\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\u0111\4\3"+
    "\1\u0112\1\u0113\1\u0114\3\3\1\u0115\11\3\1\u0116\4\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\5\3"+
    "\1\u0117\24\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\1\u0118\1\3\1\u0119\27\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\10\3\1\u011a\6\3\1\u011b"+
    "\4\3\1\u011c\5\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\3\1\u011d\6\3\1\303\21\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\u011e\1\3"+
    "\1\u011f\14\3\1\u0120\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\7\3\1\133\22\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\4\3\1\u0121\25\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u0122\6\3\1\u0123\20\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\11\3\1\u0124\20\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\5\3\1\u0125\5\3"+
    "\1\u0126\16\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\6\3\1\u0127\1\u0128\22\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u0129\1\3\1\u012a"+
    "\22\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\27\3\1\u012b\2\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\7\3\1\u012c\3\3\1\u012d\16\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\12\3\1\u012e"+
    "\17\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\4\3\1\u012f\15\3\1\273\7\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\u0130\6\3\1\u0131"+
    "\20\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\4\3\1\u0132\25\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\7\3\1\u0133\22\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u0134\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\u0135"+
    "\27\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\3\1\u0136\2\3\1\u0137\1\3\1\303\1\3\1\u0138"+
    "\1\3\1\u0139\4\3\1\u013a\1\u013b\11\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\11\3\1\u013c\20\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\25\3"+
    "\1\u013d\4\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\27\3\1\111\2\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\u013e\2\3\1\u013f\2\3"+
    "\1\u0140\5\3\1\u0141\4\3\1\u0142\4\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\u0143\31\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\u0144\31\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\25\3"+
    "\1\111\4\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\5\3\1\u0145\7\3\1\u0146\14\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\16\3\1\u0147\6\3"+
    "\1\110\4\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\13\3\1\u0148\16\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\23\3\1\111\6\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\20\3\1\u0149\11\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\u014a"+
    "\31\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\7\3\1\u014b\22\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\u012d\31\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\110\25\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\u0115\10\3\1\u014c"+
    "\20\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\11\3\1\u014d\20\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u014e\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\6\3\1\111\23\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\21\3\1\110"+
    "\10\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\7\3\1\u0128\22\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\3\3\1\110\1\u0121\25\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\5\3\1\u011e\24\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\3"+
    "\1\u014f\4\3\1\225\23\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\6\3\1\u0150\23\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\17\3\1\u0151\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\17\3"+
    "\1\u0152\12\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\5\3\1\u0133\24\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\u0153\14\3\1\147\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\4\3"+
    "\1\u0154\25\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\5\3\1\u0155\1\3\1\u0156\22\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u0157\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\17\3"+
    "\1\343\12\3\2\0\1\3\1\0\1\3\4\0\1\276"+
    "\64\0\1\276\6\0\1\276\2\0\2\276\60\0\1\276"+
    "\4\0\7\300\1\u0158\12\300\1\302\42\300\2\302\5\300"+
    "\7\302\1\u0159\12\302\1\301\60\302\1\u0158\64\302\1\0"+
    "\3\3\27\0\2\3\1\u012d\27\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\11\3\1\u015a\20\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\17\3\1\u015b"+
    "\12\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\15\3\1\u015c\14\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\11\3\1\u015d\20\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\u015e\27\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\u015f\1\3"+
    "\1\110\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\7\3\1\u0160\22\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\u0161\27\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\7\3\1\u0162\7\3"+
    "\1\u0163\12\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\1\u0164\1\3\1\u0165\27\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\12\3\1\u0166\17\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\16\3\1\147"+
    "\13\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\273\31\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\12\3\1\110\17\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\22\3\1\u0167\7\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\4\3\1\u0168\5\3"+
    "\1\u0169\11\3\1\110\5\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\12\3\1\u0150\17\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u016a\2\3"+
    "\1\u016b\24\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\u016c\27\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\110\13\3\1\u016d\11\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\7\3"+
    "\1\u016e\22\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\2\0\1\u016f\24\0\32\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u0170\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\7\3\1\u0171\22\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\4\3\1\u0172"+
    "\25\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\10\3\1\u0173\21\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\6\3\1\u0174\10\3\1\u0175\12\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\110"+
    "\3\3\1\u015a\23\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\22\3\1\u0176\2\3\1\110\4\3\2\0"+
    "\1\3\1\0\1\3\3\0\2\3\1\u0177\27\0\32\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\6\3"+
    "\1\110\23\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\u0178\27\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\31\3\1\u0179\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\20\3\1\u017a\11\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\3\1\u017b"+
    "\5\3\1\110\22\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\13\3\1\u017c\16\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\u017d\31\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\7\3\1\u017e\22\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\11\3"+
    "\1\u017f\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\u0180\27\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\u0181\25\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u0182\6\3"+
    "\1\u0183\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\7\3\1\u0184\22\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\12\3\1\u0185\5\3\1\110\1\3"+
    "\1\u0186\7\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\15\3\1\251\14\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\13\3\1\u0187\3\3\1\u0188\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u0189\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\110\7\3\1\u018a\17\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\15\3\1\u018b\14\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\7\3"+
    "\1\u018c\22\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\u018d\27\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\22\3\1\u018e\7\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\3\1\u012b\30\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u0128\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\1\3\1\110\30\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u0128\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\u018f\27\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\4\3\1\u0190"+
    "\25\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\12\3\1\374\17\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\12\3\1\u0191\17\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\10\3\1\u0162\1\3\1\u0192"+
    "\5\3\1\u0193\11\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\12\3\1\u0194\17\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\6\3\1\251\2\3\1\u012d"+
    "\13\3\1\u0195\1\3\1\u0196\2\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\17\3\1\114\12\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\7\3\1\u0197"+
    "\22\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\11\3\1\251\20\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\6\3\1\u0198\23\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\u0199\27\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\u012d"+
    "\5\3\1\u0138\21\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\20\3\1\u019a\11\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u019b\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\u019c\31\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\110\1\3\1\110\5\3\1\u019d\17\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\u0161\31\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\20\3\1\u0189"+
    "\11\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\20\3\1\u019e\11\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\7\3\1\u019f\22\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u01a0\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\4\3\1\u01a1"+
    "\1\3\1\u01a2\11\3\1\u01a3\6\3\1\u01a4\2\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\7\3\1\u01a5"+
    "\3\3\1\u01a6\16\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\6\3\1\251\23\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\10\3\1\u01a7\14\3\1\u01a8"+
    "\4\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\5\3\1\u01a9\12\3\1\u01aa\11\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u01ab\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\12\3\1\u01ac"+
    "\17\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\17\3\1\170\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\11\3\1\343\17\3\1\u01ad\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\6\3\1\u01ae\23\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\u0152"+
    "\31\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\22\3\1\111\7\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\5\3\1\110\24\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\6\3\1\120\23\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\12\3\1\u0132"+
    "\17\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\2\3\1\u01af\27\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\25\3\1\110\4\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\251\31\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u01b0\1\3"+
    "\1\u01b1\25\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\6\3\1\373\23\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\12\3\1\114\17\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\7\3\1\110\22\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\20\3"+
    "\1\251\11\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\110\4\3\1\u01b2\22\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\17\3\1\u0120\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\3"+
    "\1\u01b3\30\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\24\3\1\u014c\5\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\26\3\1\u01b4\3\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\u0133\31\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\26\3\1\133"+
    "\3\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\15\3\1\110\14\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\24\3\1\110\5\3\2\0\1\3\1\0"+
    "\1\3\3\0\2\3\1\u01b5\27\0\32\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\6\3\1\u01b6\23\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u01b7\14\3\1\u01b8\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\u01b9\6\3\1\110\20\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\13\3"+
    "\1\251\16\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\7\3\1\u01ba\22\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\u01bb\25\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u01bc\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\7\3"+
    "\1\u01bd\22\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\u01be\27\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\13\3\1\u01bf\16\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u01c0\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\4\3"+
    "\1\305\4\3\1\u0126\1\3\1\u01c1\16\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\20\3\1\u01c2\11\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\u01c3"+
    "\31\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\4\3\1\u01c4\25\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\12\3\1\111\17\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\11\3\1\257\20\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\u01c5"+
    "\27\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\20\3\1\u01c6\11\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u01c7\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u01c8\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\7\3\1\u01c9"+
    "\22\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\2\3\1\u01ca\7\3\1\u01cb\5\3\1\u01cc\5\3\1\u01cd"+
    "\3\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\13\3\1\317\16\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\16\3\1\374\13\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\11\3\1\110\20\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\13\3\1\147"+
    "\16\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\13\3\1\u0161\16\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u01ce\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u01cf\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\5\3\1\111"+
    "\1\u01d0\23\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\15\3\1\u01d1\14\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\12\3\1\154\6\3\1\u012b\10\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\13\3"+
    "\1\u01d2\16\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\26\3\1\110\3\3\2\0\1\3\1\0\1\3"+
    "\2\0\7\302\1\u0158\1\u01d3\72\302\1\u0159\1\u01d4\11\302"+
    "\1\301\51\302\1\0\3\3\27\0\12\3\1\u010e\17\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\11\3"+
    "\1\343\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\11\3\1\u01d5\20\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\7\3\1\u01a7\22\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\5\3\1\114\24\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\16\3"+
    "\1\u01d6\13\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\7\3\1\u01d7\22\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\111\25\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\u01d8\31\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\25\3\1\374"+
    "\4\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\13\3\1\u01d9\16\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\5\3\1\u01da\24\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u01db\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\6\3\1\u01dc"+
    "\23\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\5\3\1\u01dd\11\3\1\u01de\12\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\11\3\1\u01df\20\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\5\3\1\u01e0"+
    "\24\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\u01c0\31\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\10\3\1\u01e1\21\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\u0189\25\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\27\3\1\u0128\2\3"+
    "\2\0\1\3\1\0\1\3\37\0\1\u01e2\37\0\3\3"+
    "\27\0\10\3\1\111\21\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\u01e3\27\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\20\3\1\u01e4\11\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\11\3"+
    "\1\u01e5\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\20\3\1\u01e6\11\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\7\3\1\u012b\22\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\22\3\1\303\7\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\12\3"+
    "\1\u01e7\17\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\20\3\1\u01e8\2\3\1\u01e9\6\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\13\3\1\374\16\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u01ca\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\4\3\1\u01ea\25\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\5\3\1\343\24\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\4\3\1\u01eb\25\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\17\3"+
    "\1\u01ec\12\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\6\3\1\u01ed\23\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\5\3\1\u01ee\24\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\5\3\1\u01ef\3\3"+
    "\1\u01d8\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\5\3\1\251\24\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\24\3\1\111\5\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\16\3\1\u01f0\13\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\11\3"+
    "\1\u01f1\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\13\3\1\u01f2\16\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\5\3\1\374\24\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\11\3\1\u01e0\20\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\20\3"+
    "\1\110\11\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\7\3\1\u01f3\22\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\u01f4\27\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\17\3\1\u01f5\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\5\3"+
    "\1\u0197\24\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\13\3\1\u01f6\16\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\6\3\1\u014e\23\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\17\3\1\374\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u0115\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\17\3\1\u01f7\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\u01f8\27\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u01f9\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\u01fa"+
    "\31\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\17\3\1\u01fb\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\17\3\1\322\12\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\3\1\u01fc\1\3\1\u01fd"+
    "\1\3\1\u01fe\23\3\1\u01ff\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\u0200\25\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u016d\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\7\3"+
    "\1\u0201\22\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\7\3\1\u0202\22\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u0203\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u0204\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\u0205"+
    "\27\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\2\3\1\u0206\27\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\u0207\16\3\1\u0208\12\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u0209\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\4\3"+
    "\1\u020a\25\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\u0182\27\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u020b\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\25\3\1\343\4\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\17\3\1\251"+
    "\12\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\2\3\1\u020c\27\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\11\3\1\u012d\20\3\2\0\1\3\1\0"+
    "\1\3\3\0\2\3\1\u01b5\27\0\1\u020d\31\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\24\3\1\u020e"+
    "\5\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\13\3\1\111\16\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\11\3\1\u020f\20\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u0210\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\17\3\1\u0211"+
    "\12\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\5\3\1\165\24\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\14\3\1\u0212\15\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\7\3\1\u0213\22\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\141"+
    "\27\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\7\3\1\u0214\22\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u0215\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\3\3\1\110\26\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\12\3\1\u0216"+
    "\17\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\5\3\1\u0217\14\3\1\303\7\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\13\3\1\u0218\16\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\17\3\1\u0219"+
    "\12\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\5\3\1\251\1\u021a\23\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\114\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\3\1\u021b\30\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\20\3\1\303"+
    "\11\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\12\3\1\251\17\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\5\3\1\u021c\24\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\17\3\1\u021d\12\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\6\3\1\u021e"+
    "\23\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\17\3\1\u021f\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\25\3\1\u0220\4\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u0221\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\3\1\u01ae"+
    "\30\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\2\3\1\u0222\27\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\7\3\1\u0223\22\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u0224\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\110\10\3"+
    "\1\u0218\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\4\3\1\u010e\25\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u0225\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\14\3\1\u01aa\15\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\u017b"+
    "\27\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\2\3\1\u0226\27\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\17\3\1\u0227\12\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\u0228\27\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\5\3\1\u0229"+
    "\24\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\133\31\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\5\3\1\111\24\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\7\3\1\251\22\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\5\3\1\u022a\24\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\17\3"+
    "\1\u022b\12\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\11\3\1\u021f\20\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\17\3\1\u022c\12\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\6\3\1\u01c0\23\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\6\3"+
    "\1\u022d\23\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\6\3\1\374\23\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\u022e\25\3\2\0\1\3"+
    "\1\0\1\3\40\0\1\u022f\36\0\3\3\27\0\20\3"+
    "\1\u0230\11\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\17\3\1\244\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\5\3\1\u0195\24\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\u0127\6\3\1\u01a5"+
    "\22\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\11\3\1\u0231\20\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u0232\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\11\3\1\u0233\20\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\152"+
    "\27\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\17\3\1\234\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\12\3\1\u01bd\17\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\14\3\1\u0234\15\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\u0235"+
    "\27\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\17\3\1\u01c0\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\u01f4\31\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\13\3\1\u0115\16\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\17\3\1\u0236\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\13\3"+
    "\1\u0110\16\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\12\3\1\u0133\17\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\14\3\1\110\15\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\1\u011e\31\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\20\3\1\305"+
    "\11\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\5\3\1\234\24\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\3\1\u0237\30\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\256\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\7\3\1\u0238"+
    "\22\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\u0239\31\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\25\3\1\u0128\4\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\11\3\1\u023a\20\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\13\3\1\u023b\16\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\u023c"+
    "\31\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\11\3\1\120\20\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\3\1\u023d\30\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\u023e\27\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\20\3\1\u0144"+
    "\11\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\20\3\1\u023f\11\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\17\3\1\u0240\12\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\6\3\1\u01ad\23\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\12\3\1\u01e1"+
    "\17\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\5\3\1\u0241\24\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u0242\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\6\3\1\u0243\23\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\12\3\1\u0244"+
    "\17\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\10\3\1\u0245\21\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\26\3\1\343\3\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\2\3\1\u0246\27\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\22\3\1\343"+
    "\7\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\u0247\31\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\11\3\1\u01f4\20\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\2\3\1\u0248\27\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\17\3\1\u0249\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\1\u024a"+
    "\31\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\20\3\1\u013f\6\3\1\374\2\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\3\1\111\30\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\1\u024b\31\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\20\3"+
    "\1\u024c\11\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\17\3\1\u010e\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\17\3\1\u024d\12\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\11\3\1\u024e\20\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\4\3"+
    "\1\u024f\25\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\20\3\1\u0250\11\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\110\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u012b\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\25\3\1\u0251"+
    "\4\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\17\3\1\u0115\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\5\3\1\u01aa\24\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u0252\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\27\3\1\303"+
    "\2\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\6\3\1\u0253\23\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\17\3\1\u0254\12\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\320\1\3\1\373\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\10\3"+
    "\1\u024a\5\3\1\111\13\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\16\3\1\u0255\13\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\6\3\1\u013f\23\3"+
    "\2\0\1\3\1\0\1\3\37\0\1\u0256\37\0\3\3"+
    "\27\0\1\u0257\31\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\6\3\1\u0258\23\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\1\125\31\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\6\3\1\u0259\23\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\17\3"+
    "\1\u025a\12\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\6\3\1\u025b\23\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\3\1\u025c\30\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\13\3\1\u01d8\16\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u025d\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\4\3\1\u025e\25\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\26\3\1\u025f\3\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u01fa\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\10\3"+
    "\1\u0189\21\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\u0260\27\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\5\3\1\u0261\24\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\10\3\1\u0262\21\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\6\3"+
    "\1\u0263\23\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\1\u0264\31\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\2\3\1\110\14\3\1\u015b\12\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\4\3\1\u0265"+
    "\25\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\4\3\1\u0266\25\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\11\3\1\u0223\20\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\3\3\1\u0267\26\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\12\3\1\u024a"+
    "\17\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\6\3\1\u0268\23\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u0269\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u01aa\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\7\3\1\u026a"+
    "\22\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\17\3\1\u017d\12\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\4\3\1\u026b\25\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\6\3\1\u026c\23\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\17\3\1\u026d"+
    "\12\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\4\3\1\u026e\25\3\2\0\1\3\1\0\1\3\3\0"+
    "\2\3\1\u026f\27\0\32\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\6\3\1\u012b\23\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\22\3\1\u0270\7\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\23\3"+
    "\1\u01bd\6\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\13\3\1\u0271\16\3\2\0\1\3\1\0\1\3"+
    "\47\0\1\u0272\27\0\3\3\27\0\25\3\1\u0273\4\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\27\3"+
    "\1\u01a4\2\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\2\3\1\u0274\27\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\22\3\1\u0237\7\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\12\3\1\363\17\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\12\3"+
    "\1\u0275\17\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\22\3\1\363\7\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u0276\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\20\3\1\u0277\11\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\2\3\1\373"+
    "\27\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\11\3\1\u0278\20\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\20\3\1\u0279\11\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\17\3\1\u027a\12\3\2\0"+
    "\1\3\1\0\1\3\3\0\2\3\1\u027b\27\0\32\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u027c\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\4\3\1\u0279\25\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\22\3\1\225\7\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\21\3\1\u027d\10\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\21\3"+
    "\1\u027e\10\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\12\3\1\u027f\17\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\17\3\1\u0280\12\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\5\3\1\u0281\24\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\4\3"+
    "\1\u0261\25\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\10\3\1\147\21\3\2\0\1\3\1\0\1\3"+
    "\3\0\2\3\1\u0282\27\0\32\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\11\3\1\u0128\20\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\20\3\1\u0283"+
    "\11\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\2\3\1\251\27\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\6\3\1\371\23\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\4\3\1\u0284\25\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\6\3\1\u0285"+
    "\23\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\3\1\u010e\2\3\1\u0286\6\3\1\u01bf\16\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\5\3\1\u0134"+
    "\24\3\2\0\1\3\1\0\1\3\3\0\2\3\1\u0287"+
    "\27\0\12\3\1\u0275\17\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u0288\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\20\3\1\u0289\3\3\1\u028a"+
    "\5\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\12\3\1\u0189\17\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\11\3\1\u014c\20\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\15\3\1\u028b\7\3\1\u028c"+
    "\4\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\11\3\1\u028d\20\3\2\0\1\3\1\0\1\3\3\0"+
    "\3\3\27\0\1\320\31\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\4\3\1\u0228\25\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\17\3\1\u028e\12\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\17\3"+
    "\1\u028f\12\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\13\3\1\u0290\16\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\17\3\1\u0291\12\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u0292\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\11\3"+
    "\1\u0293\20\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\17\3\1\u0294\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\13\3\1\u0295\16\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\25\3\1\u0296\4\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\6\3"+
    "\1\u0297\23\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\1\3\1\u01a8\30\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\25\3\1\u0298\4\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\21\3\1\u0299\10\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\13\3"+
    "\1\u012d\16\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\6\3\1\u01a7\23\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\5\3\1\u0144\24\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\2\3\1\u029a\27\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\20\3"+
    "\1\u01a4\11\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\17\3\1\u029b\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\10\3\1\u029c\21\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\20\3\1\u01e8\11\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\7\3"+
    "\1\u029d\22\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\15\3\1\u029e\14\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u029f\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\5\3\1\u02a0\24\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\5\3\1\u02a1"+
    "\24\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\1\u02a2\31\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\17\3\1\u02a3\12\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\20\3\1\u02a4\11\3\2\0\1\3"+
    "\1\0\1\3\3\0\3\3\27\0\4\3\1\u02a5\25\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u02a6\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\21\3\1\u02a7\10\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\3\1\u02a8\2\3\1\u0284\25\3"+
    "\2\0\1\3\1\0\1\3\3\0\3\3\27\0\2\3"+
    "\1\u02a9\27\3\2\0\1\3\1\0\1\3\3\0\3\3"+
    "\27\0\4\3\1\u02aa\25\3\2\0\1\3\1\0\1\3"+
    "\3\0\3\3\27\0\1\u02ab\31\3\2\0\1\3\1\0"+
    "\1\3\3\0\3\3\27\0\17\3\1\u02ac\12\3\2\0"+
    "\1\3\1\0\1\3\3\0\3\3\27\0\7\3\1\u02ad"+
    "\22\3\2\0\1\3\1\0\1\3\3\0\3\3\27\0"+
    "\20\3\1\u02a6\11\3\2\0\1\3\1\0\1\3\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[38580];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\3\1\1\11\1\1\1\11"+
    "\6\1\3\11\1\1\1\11\1\1\1\11\1\1\2\11"+
    "\33\1\2\11\4\1\12\11\166\1\1\11\3\1\2\0"+
    "\225\1\2\0\25\1\1\0\143\1\1\11\16\1\1\0"+
    "\114\1\1\0\46\1\1\0\33\1\1\11\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[685];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;
    public int line;
    public int initialcolumn;
    public int finalcolumn;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Alexico(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Alexico(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 146) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 30: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Comentario;
          }
        case 45: break;
        case 38: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Corchetes;
          }
        case 46: break;
        case 34: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Mayor_o_igual_que;
          }
        case 47: break;
        case 24: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Arroba;
          }
        case 48: break;
        case 35: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Operador_no_igual;
          }
        case 49: break;
        case 27: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Cierre_signo_de_Interrogacion;
          }
        case 50: break;
        case 14: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Signo_de_Exclamaci√≥n;
          }
        case 51: break;
        case 25: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Numeral;
          }
        case 52: break;
        case 4: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Gui√≥n_bajo;
          }
        case 53: break;
        case 3: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Int;
          }
        case 54: break;
        case 41: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Doble_Numeral;
          }
        case 55: break;
        case 15: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Punto_y_coma;
          }
        case 56: break;
        case 39: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Par√©ntesis;
          }
        case 57: break;
        case 40: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Llaves;
          }
        case 58: break;
        case 44: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return String;
          }
        case 59: break;
        case 17: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Punto;
          }
        case 60: break;
        case 31: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return ComentarioE;
          }
        case 61: break;
        case 7: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Resta;
          }
        case 62: break;
        case 43: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return StringE;
          }
        case 63: break;
        case 8: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Multiplicacion;
          }
        case 64: break;
        case 28: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Apertura_signo_de_Interrogacion;
          }
        case 65: break;
        case 1: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return ERROR;
          }
        case 66: break;
        case 21: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Cierre_de_par√©ntesis;
          }
        case 67: break;
        case 10: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Porcentaje;
          }
        case 68: break;
        case 2: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Identificador;
          }
        case 69: break;
        case 33: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Operador_de_Igualdad;
          }
        case 70: break;
        case 19: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Cierre_de_corchetes;
          }
        case 71: break;
        case 12: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Igual;
          }
        case 72: break;
        case 37: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Operador_OR;
          }
        case 73: break;
        case 29: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Float;
          }
        case 74: break;
        case 32: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Menor_o_igual_que;
          }
        case 75: break;
        case 42: 
          { lexeme = yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Reservadas;
          }
        case 76: break;
        case 9: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Division;
          }
        case 77: break;
        case 23: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Cierre_de_llaves;
          }
        case 78: break;
        case 22: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Apertura_de_llaves;
          }
        case 79: break;
        case 20: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Apertura_de_par√©ntesis;
          }
        case 80: break;
        case 18: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Apertura_de_corchetes;
          }
        case 81: break;
        case 16: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Coma;
          }
        case 82: break;
        case 11: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Menor_que;
          }
        case 83: break;
        case 6: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Suma;
          }
        case 84: break;
        case 5: 
          { /*Ignore*/
          }
        case 85: break;
        case 26: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Bit;
          }
        case 86: break;
        case 36: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Operador_AND;
          }
        case 87: break;
        case 13: 
          { lexeme=yytext(); line = yyline; initialcolumn = yycolumn; finalcolumn = yycolumn + yylength()-1; return Mayor_que;
          }
        case 88: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
