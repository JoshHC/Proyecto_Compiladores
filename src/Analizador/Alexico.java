/* The following code was generated by JFlex 1.4.3 on 21/08/19 11:25 AM */

package Analizador;
import static Analizador.Tokens.*;

/* Secci√≥n de declaraciones de JFlex */

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 21/08/19 11:25 AM from the specification file
 * <tt>C:/Users/josue/Documents/NetBeansProjects/Proyecto_Compiladores/Proyecto_Compiladores/src/Analizador/Alexico.flex</tt>
 */
class Alexico {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\4\1\45\2\0\1\4\22\0\1\4\1\0\1\0\1\0"+
    "\1\0\1\0\1\0\1\47\1\0\1\0\1\7\1\5\1\4\1\6"+
    "\1\12\1\10\1\46\1\46\10\2\1\0\1\0\1\0\1\11\1\0"+
    "\1\0\1\0\1\13\1\31\1\25\1\14\1\15\1\27\1\35\1\30"+
    "\1\32\1\43\1\37\1\22\1\40\1\21\1\24\1\23\1\44\1\20"+
    "\1\33\1\17\1\26\1\42\1\41\1\16\1\34\1\36\1\0\1\0"+
    "\1\0\1\0\1\1\1\0\32\3\1\0\1\0\1\0\uff82\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7"+
    "\1\10\1\11\30\2\1\12\1\1\1\13\1\0\1\14"+
    "\1\2\1\15\6\2\1\15\20\2\1\15\12\2\1\15"+
    "\15\2\2\15\3\2\1\15\32\2\2\15\21\2\1\15"+
    "\17\2\1\0\1\16\1\0\1\2\1\15\7\2\1\15"+
    "\15\2\1\15\57\2\1\15\24\2\1\15\5\2\1\15"+
    "\16\2\1\15\2\2\1\15\6\2\1\15\14\2\1\15"+
    "\4\2\1\15\7\2\1\0\1\14\14\2\1\15\10\2"+
    "\1\0\4\2\1\15\3\2\1\15\2\2\1\15\20\2"+
    "\1\15\7\2\1\15\3\2\1\15\2\2\1\15\17\2"+
    "\1\15\44\2\2\15\16\2\1\0\1\15\52\2\1\15"+
    "\31\2\1\15\5\2\1\15\1\0\46\2\1\0\11\2"+
    "\1\15\4\2\1\15\6\2\1\15\5\2\1\15\6\2"+
    "\1\15\3\2\1\15\34\2\1\15\23\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[648];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\50\0\120\0\170\0\240\0\50\0\50\0\50"+
    "\0\310\0\50\0\360\0\u0118\0\u0140\0\u0168\0\u0190\0\u01b8"+
    "\0\u01e0\0\u0208\0\u0230\0\u0258\0\u0280\0\u02a8\0\u02d0\0\u02f8"+
    "\0\u0320\0\u0348\0\u0370\0\u0398\0\u03c0\0\u03e8\0\u0410\0\u0438"+
    "\0\u0460\0\u0488\0\170\0\u04b0\0\u04d8\0\u0500\0\u0528\0\u0550"+
    "\0\120\0\u0578\0\u05a0\0\u05c8\0\u05f0\0\u0618\0\u0640\0\u0668"+
    "\0\u0690\0\u06b8\0\u06e0\0\u0708\0\u0730\0\u0758\0\u0780\0\u07a8"+
    "\0\u07d0\0\u07f8\0\u0820\0\u0848\0\u0870\0\u0898\0\u08c0\0\u08e8"+
    "\0\u0910\0\u0938\0\u0960\0\u0988\0\u09b0\0\u09d8\0\u0a00\0\u0a28"+
    "\0\u0a50\0\u0a78\0\u0aa0\0\u0ac8\0\u0af0\0\u0b18\0\u0b40\0\u0b68"+
    "\0\u0b90\0\u0bb8\0\u0be0\0\u0c08\0\u0c30\0\u0c58\0\u0c80\0\u0ca8"+
    "\0\u0cd0\0\u0cf8\0\u0d20\0\u0d48\0\u0d70\0\u0d98\0\u0dc0\0\u0de8"+
    "\0\u0e10\0\u0e38\0\u0e60\0\u0e88\0\u0eb0\0\u0ed8\0\u0f00\0\u0f28"+
    "\0\u0f50\0\u0f78\0\u0fa0\0\u0fc8\0\u0ff0\0\u1018\0\u1040\0\u1068"+
    "\0\u1090\0\u10b8\0\u10e0\0\u1108\0\u1130\0\u1158\0\u1180\0\u11a8"+
    "\0\u11d0\0\u11f8\0\u1220\0\u1248\0\u1270\0\u1298\0\u12c0\0\u12e8"+
    "\0\u1310\0\u1338\0\u1360\0\u1388\0\u13b0\0\u13d8\0\u1400\0\u1428"+
    "\0\u1450\0\u1478\0\u14a0\0\u14c8\0\u14f0\0\u1518\0\u1540\0\u1568"+
    "\0\u1590\0\u15b8\0\u15e0\0\u1608\0\u1630\0\u1658\0\u1680\0\u16a8"+
    "\0\u16d0\0\u16f8\0\u1720\0\u1748\0\u1770\0\u1770\0\u1798\0\u17c0"+
    "\0\u17e8\0\u1810\0\u1838\0\u1860\0\u1888\0\u18b0\0\u18d8\0\u1900"+
    "\0\u1928\0\u1950\0\u1978\0\u0910\0\u19a0\0\u19c8\0\u19f0\0\u1a18"+
    "\0\u1a40\0\u1a68\0\u1a90\0\u1ab8\0\u1ae0\0\u1b08\0\u1b30\0\u1b58"+
    "\0\u1b80\0\u1ba8\0\u1bd0\0\u1bf8\0\u1c20\0\u1c48\0\u1c70\0\u1c98"+
    "\0\u1cc0\0\u1ce8\0\u1d10\0\u1d38\0\u1d60\0\u1d88\0\u1db0\0\u1dd8"+
    "\0\u1e00\0\u1e28\0\u1e50\0\u1e78\0\u1ea0\0\u1ec8\0\u1ef0\0\u1f18"+
    "\0\u1f40\0\u1f68\0\u1f90\0\u1fb8\0\u1fe0\0\u2008\0\u2030\0\u2058"+
    "\0\u2080\0\u20a8\0\u20d0\0\u20f8\0\u2120\0\u2148\0\u2170\0\u2198"+
    "\0\u21c0\0\u21e8\0\u2210\0\u2238\0\u2260\0\u2288\0\u22b0\0\u22d8"+
    "\0\u2300\0\u2328\0\u2350\0\u2378\0\u23a0\0\u23c8\0\u23f0\0\u2418"+
    "\0\u2440\0\u2468\0\u2490\0\u24b8\0\u24e0\0\u2508\0\u2530\0\u2558"+
    "\0\u2580\0\u25a8\0\u25d0\0\u25f8\0\u2620\0\u2648\0\u2670\0\u2698"+
    "\0\u26c0\0\u26e8\0\u2710\0\u2738\0\u2760\0\u2788\0\u27b0\0\u27d8"+
    "\0\u2800\0\u25f8\0\u2828\0\u2850\0\u2878\0\u28a0\0\u28c8\0\u28f0"+
    "\0\u2918\0\u2940\0\u2968\0\u2990\0\u29b8\0\u29e0\0\u2a08\0\u2a30"+
    "\0\u2a58\0\u2a80\0\u2aa8\0\u2ad0\0\u2af8\0\u2b20\0\u2b48\0\u2b70"+
    "\0\u2b98\0\u2bc0\0\u2be8\0\u2c10\0\u2c38\0\u2c60\0\u2c88\0\u2cb0"+
    "\0\u2cd8\0\u2d00\0\u2d28\0\u2d50\0\u2d78\0\u2da0\0\u2dc8\0\u2df0"+
    "\0\u2e18\0\u2e40\0\u2e68\0\u2e90\0\u04b0\0\u0500\0\u2eb8\0\u2ee0"+
    "\0\u2f08\0\u2f30\0\u2f58\0\u2f80\0\u2fa8\0\u2fd0\0\u2ff8\0\u3020"+
    "\0\u3048\0\u3070\0\u3098\0\u30c0\0\u30e8\0\u3110\0\u3138\0\u3160"+
    "\0\u3188\0\u31b0\0\u31d8\0\u3200\0\u3228\0\u3250\0\u3278\0\u32a0"+
    "\0\u32c8\0\u32f0\0\u3318\0\u3340\0\u3368\0\u3390\0\u33b8\0\u33e0"+
    "\0\u3408\0\u3430\0\u3458\0\u3480\0\u34a8\0\u34d0\0\u34f8\0\u3520"+
    "\0\u3548\0\u3570\0\u3598\0\u35c0\0\u35e8\0\u3610\0\u3638\0\u3660"+
    "\0\u3688\0\u36b0\0\u36d8\0\u3700\0\u3728\0\u3750\0\u3778\0\u37a0"+
    "\0\u37c8\0\u37f0\0\u3818\0\u3840\0\u3868\0\u3890\0\u38b8\0\u38e0"+
    "\0\u3908\0\u3930\0\u3958\0\u3980\0\u39a8\0\u39d0\0\u39f8\0\u3a20"+
    "\0\u3a48\0\u3a70\0\u3a98\0\u2d78\0\u3ac0\0\u3ae8\0\u3b10\0\u3b38"+
    "\0\u3b60\0\u3b88\0\u3bb0\0\u3bd8\0\u3c00\0\u3c28\0\u3c50\0\u3c78"+
    "\0\u3ca0\0\u3cc8\0\u3cf0\0\u3d18\0\u3d40\0\u3d68\0\u3d90\0\u3db8"+
    "\0\u3de0\0\u3e08\0\u3e30\0\u3e58\0\u3e80\0\u3ea8\0\u3ed0\0\u3ef8"+
    "\0\u3f20\0\u3f48\0\u3f70\0\u3f98\0\u3fc0\0\u3fe8\0\u4010\0\u4038"+
    "\0\u4060\0\u4088\0\u40b0\0\u40d8\0\u4100\0\u4128\0\u4150\0\u4178"+
    "\0\u41a0\0\u17e8\0\u41c8\0\u41f0\0\u4218\0\u4240\0\u4268\0\u4290"+
    "\0\u42b8\0\u42e0\0\u4308\0\u4330\0\u4358\0\u4380\0\u43a8\0\u43d0"+
    "\0\u43f8\0\u4420\0\u4448\0\u4470\0\u4498\0\u44c0\0\u44e8\0\u4510"+
    "\0\u4538\0\u4560\0\u4588\0\u45b0\0\u45d8\0\u4600\0\u4628\0\u4650"+
    "\0\u4678\0\u46a0\0\u46c8\0\u46f0\0\u4718\0\u4740\0\u4768\0\u4790"+
    "\0\u47b8\0\u47e0\0\u2918\0\u4808\0\u4830\0\u4858\0\u4880\0\u48a8"+
    "\0\u48d0\0\u48f8\0\u4920\0\u4948\0\u4970\0\u4998\0\u49c0\0\u49e8"+
    "\0\u4a10\0\u4a38\0\u4a60\0\u4a88\0\u4ab0\0\u4ad8\0\u4b00\0\u4b28"+
    "\0\u4b50\0\u4b78\0\u4ba0\0\u4bc8\0\u4bf0\0\u4c18\0\u4c40\0\u4c68"+
    "\0\u4c90\0\u4cb8\0\u4ce0\0\u4d08\0\u4d30\0\u4d58\0\u4d80\0\u4da8"+
    "\0\u4dd0\0\u4df8\0\u3610\0\u4e20\0\u4e48\0\u4e70\0\u4e98\0\u4ec0"+
    "\0\u1810\0\u4ee8\0\u4f10\0\u4f38\0\u4f60\0\u4f88\0\u4fb0\0\u4fd8"+
    "\0\u5000\0\u5028\0\u5050\0\u5078\0\u50a0\0\u50c8\0\u50f0\0\u5118"+
    "\0\u5140\0\u5168\0\u5190\0\u51b8\0\u51e0\0\u5208\0\u5230\0\u5258"+
    "\0\u5280\0\u52a8\0\u52d0\0\u52f8\0\u5320\0\u5348\0\u5370\0\u5398"+
    "\0\u53c0\0\u53e8\0\u5410\0\u5438\0\u5460\0\u5488\0\u54b0\0\u54d8"+
    "\0\u5500\0\u5528\0\u5550\0\u5578\0\u55a0\0\u55c8\0\u55f0\0\u5618"+
    "\0\u5640\0\u5668\0\u2058\0\u5690\0\u56b8\0\u56e0\0\u5708\0\u5730"+
    "\0\u5758\0\u5780\0\u57a8\0\u57d0\0\u0d20\0\u57f8\0\u5438\0\u5820"+
    "\0\u5848\0\u2aa8\0\u5870\0\u5898\0\50\0\u58c0\0\u58e8\0\u5910"+
    "\0\u5938\0\u5960\0\u5988\0\u59b0\0\u59d8\0\u5a00\0\u5a28\0\u5a50"+
    "\0\u5a78\0\u5aa0\0\u5ac8\0\u5af0\0\u5b18\0\u5b40\0\u5b68\0\u5b90"+
    "\0\u5bb8\0\u5be0\0\u5c08\0\u5c30\0\u5c58\0\u5c80\0\u5ca8\0\u5cd0"+
    "\0\u5cf8\0\u5d20\0\u5d48\0\u5d70\0\u5d98\0\u5dc0\0\u5de8\0\u5e10"+
    "\0\u5e38\0\u5e60\0\u5e88\0\u5eb0\0\u5ed8\0\u5f00\0\u5f28\0\u5f50"+
    "\0\u5f78\0\u5fa0\0\u5fc8\0\u5ff0\0\u6018\0\u6040\0\u6068\0\u6090"+
    "\0\u59b0\0\u60b8\0\u60e0\0\u6108\0\u6130\0\u6158\0\u6180\0\u61a8";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[648];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\3\1\5\1\6\1\7\1\10"+
    "\1\11\1\12\1\2\1\13\1\14\1\15\1\3\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\1\37\1\40\1\41\1\42\1\3\1\5\1\43\1\44"+
    "\51\0\3\3\7\0\32\3\1\0\1\3\3\0\1\4"+
    "\7\0\1\45\33\0\1\4\5\0\1\5\40\0\1\5"+
    "\11\0\1\46\1\47\40\0\3\3\7\0\1\3\1\50"+
    "\2\3\1\51\1\52\1\53\1\54\2\3\1\55\1\56"+
    "\2\3\1\57\1\3\1\60\6\3\1\61\2\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\62\1\3\1\63\2\3"+
    "\1\64\3\3\1\65\1\3\1\66\2\3\1\67\1\70"+
    "\12\3\1\0\1\3\2\0\3\3\7\0\3\3\1\71"+
    "\1\3\1\72\1\73\1\74\10\3\1\75\11\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\76\1\3\1\77\2\3"+
    "\1\100\3\3\1\101\3\3\1\102\1\3\1\103\1\104"+
    "\11\3\1\0\1\3\2\0\3\3\7\0\1\105\1\3"+
    "\1\106\6\3\1\107\1\3\1\110\3\3\1\111\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\112\1\3\1\113"+
    "\6\3\1\114\1\115\1\116\16\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\117\1\3\1\120\6\3\1\121\5\3"+
    "\1\122\12\3\1\0\1\3\2\0\3\3\7\0\1\123"+
    "\1\3\1\124\2\3\1\125\1\3\1\126\1\3\1\127"+
    "\1\3\1\130\3\3\1\131\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\5\3\1\132\1\133\1\3\1\134\1\3"+
    "\1\135\1\136\1\137\12\3\1\140\2\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\141\4\3\1\142\1\3\1\143"+
    "\1\3\1\144\1\3\1\145\1\3\1\146\14\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\147\1\3\1\150"+
    "\7\3\1\151\11\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\152\1\3\1\153\2\3\1\154\1\3\1\155\1\3"+
    "\1\156\1\3\1\157\3\3\1\160\12\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\161\10\3\1\162\20\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\163\1\3\1\164\2\3"+
    "\1\165\3\3\1\166\1\3\1\167\3\3\1\170\1\3"+
    "\1\51\10\3\1\0\1\3\2\0\3\3\7\0\1\3"+
    "\1\171\4\3\1\172\5\3\1\51\3\3\1\173\4\3"+
    "\1\174\4\3\1\0\1\3\2\0\3\3\7\0\1\175"+
    "\1\3\1\176\1\3\1\177\3\3\1\200\1\201\1\202"+
    "\1\203\1\3\1\204\1\3\1\205\1\3\1\206\3\3"+
    "\1\207\3\3\1\210\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\211\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\212\2\3\1\213\1\3\1\214\1\3\1\215"+
    "\20\3\1\0\1\3\2\0\3\3\7\0\11\3\1\216"+
    "\20\3\1\0\1\3\2\0\3\3\7\0\2\3\1\217"+
    "\14\3\1\220\12\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\221\1\3\1\222\6\3\1\223\5\3\1\224\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\225\4\3\1\226"+
    "\3\3\1\227\3\3\1\230\1\3\1\231\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\232\16\3\1\233\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\11\3\1\234\20\3"+
    "\1\0\1\3\1\0\45\235\1\0\1\235\1\236\2\0"+
    "\1\45\43\0\1\45\1\0\7\46\1\237\35\46\1\0"+
    "\2\46\45\47\1\0\2\47\1\0\3\3\7\0\2\51"+
    "\30\3\1\0\1\3\2\0\3\3\7\0\2\3\1\51"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\1\3\1\51"+
    "\17\3\1\51\10\3\1\0\1\3\2\0\3\3\7\0"+
    "\4\3\1\240\2\3\1\241\22\3\1\0\1\3\2\0"+
    "\3\3\7\0\4\3\1\242\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\4\3\1\243\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\20\3\1\244\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\12\3\1\51\5\3\1\245\11\3\1\0"+
    "\1\3\2\0\3\3\7\0\22\3\1\51\7\3\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\246\14\3\1\51"+
    "\10\3\1\0\1\3\2\0\3\3\7\0\1\247\5\3"+
    "\1\217\1\250\2\3\1\251\1\3\1\252\3\3\1\253"+
    "\11\3\1\0\1\3\2\0\3\3\7\0\11\3\1\254"+
    "\20\3\1\0\1\3\2\0\3\3\7\0\13\3\1\255"+
    "\11\3\1\256\4\3\1\0\1\3\2\0\3\3\7\0"+
    "\25\3\1\254\4\3\1\0\1\3\2\0\3\3\7\0"+
    "\12\3\1\257\17\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\260\17\3\1\261\11\3\1\0\1\3\2\0\3\3"+
    "\7\0\2\3\1\262\1\3\1\263\5\3\1\264\4\3"+
    "\1\265\12\3\1\0\1\3\2\0\3\3\7\0\5\3"+
    "\1\266\24\3\1\0\1\3\2\0\3\3\7\0\1\3"+
    "\1\267\30\3\1\0\1\3\2\0\3\3\7\0\20\3"+
    "\1\52\11\3\1\0\1\3\2\0\3\3\7\0\12\3"+
    "\1\270\17\3\1\0\1\3\2\0\3\3\7\0\16\3"+
    "\1\271\13\3\1\0\1\3\2\0\3\3\7\0\3\3"+
    "\1\272\21\3\1\273\4\3\1\0\1\3\2\0\3\3"+
    "\7\0\1\274\12\3\1\275\3\3\1\276\1\3\1\277"+
    "\10\3\1\0\1\3\2\0\3\3\7\0\10\3\1\51"+
    "\21\3\1\0\1\3\2\0\3\3\7\0\2\3\1\300"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\25\3\1\301"+
    "\4\3\1\0\1\3\2\0\3\3\7\0\2\3\1\302"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\17\3\1\303"+
    "\12\3\1\0\1\3\2\0\3\3\7\0\1\304\3\3"+
    "\1\305\2\3\1\306\1\307\1\3\1\310\1\3\1\311"+
    "\3\3\1\312\6\3\1\313\2\3\1\0\1\3\2\0"+
    "\3\3\7\0\7\3\1\314\16\3\1\315\3\3\1\0"+
    "\1\3\2\0\3\3\7\0\7\3\1\52\22\3\1\0"+
    "\1\3\2\0\3\3\7\0\22\3\1\316\7\3\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\317\20\3\1\320"+
    "\4\3\1\0\1\3\2\0\3\3\7\0\3\3\1\212"+
    "\26\3\1\0\1\3\2\0\3\3\7\0\4\3\1\51"+
    "\1\3\1\321\3\3\1\322\17\3\1\0\1\3\2\0"+
    "\3\3\7\0\15\3\1\211\14\3\1\0\1\3\2\0"+
    "\3\3\7\0\7\3\1\323\15\3\1\324\4\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\325\11\3\1\212"+
    "\11\3\1\0\1\3\2\0\3\3\7\0\1\326\13\3"+
    "\1\212\12\3\1\327\2\3\1\0\1\3\2\0\3\3"+
    "\7\0\1\330\11\3\1\331\13\3\1\240\3\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\332\15\3\1\52"+
    "\5\3\1\0\1\3\2\0\3\3\7\0\1\3\1\51"+
    "\3\3\1\333\12\3\1\334\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\5\3\1\335\24\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\336\6\3\1\337\5\3\1\340"+
    "\12\3\1\0\1\3\2\0\3\3\7\0\1\300\31\3"+
    "\1\0\1\3\2\0\3\3\7\0\20\3\1\341\11\3"+
    "\1\0\1\3\2\0\3\3\7\0\16\3\1\342\13\3"+
    "\1\0\1\3\2\0\3\3\7\0\27\3\1\343\2\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\3\1\240\30\3"+
    "\1\0\1\3\2\0\3\3\7\0\7\3\1\217\22\3"+
    "\1\0\1\3\2\0\3\3\7\0\2\3\1\344\1\3"+
    "\1\242\25\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\345\25\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\346\25\3\1\0\1\3\2\0\3\3\7\0\14\3"+
    "\1\347\15\3\1\0\1\3\2\0\3\3\7\0\2\3"+
    "\1\350\27\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\351\13\3\1\352\11\3\1\0\1\3\2\0\3\3"+
    "\7\0\2\3\1\353\6\3\1\354\20\3\1\0\1\3"+
    "\2\0\3\3\7\0\11\3\1\74\1\3\1\355\16\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\356\4\3\1\357"+
    "\1\360\1\361\3\3\1\362\11\3\1\363\4\3\1\0"+
    "\1\3\2\0\3\3\7\0\5\3\1\364\24\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\365\1\3\1\366\27\3"+
    "\1\0\1\3\2\0\3\3\7\0\10\3\1\367\6\3"+
    "\1\370\4\3\1\371\5\3\1\0\1\3\2\0\3\3"+
    "\7\0\1\3\1\372\6\3\1\240\21\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\373\1\3\1\374\14\3\1\375"+
    "\12\3\1\0\1\3\2\0\3\3\7\0\7\3\1\74"+
    "\22\3\1\0\1\3\2\0\3\3\7\0\4\3\1\376"+
    "\25\3\1\0\1\3\2\0\3\3\7\0\2\3\1\377"+
    "\6\3\1\u0100\20\3\1\0\1\3\2\0\3\3\7\0"+
    "\11\3\1\u0101\20\3\1\0\1\3\2\0\3\3\7\0"+
    "\5\3\1\u0102\5\3\1\u0103\16\3\1\0\1\3\2\0"+
    "\3\3\7\0\6\3\1\u0104\1\u0105\22\3\1\0\1\3"+
    "\2\0\3\3\7\0\5\3\1\u0106\1\3\1\u0107\22\3"+
    "\1\0\1\3\2\0\3\3\7\0\27\3\1\u0108\2\3"+
    "\1\0\1\3\2\0\3\3\7\0\7\3\1\u0109\3\3"+
    "\1\u010a\16\3\1\0\1\3\2\0\3\3\7\0\12\3"+
    "\1\u010b\17\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\u010c\15\3\1\234\7\3\1\0\1\3\2\0\3\3"+
    "\7\0\2\3\1\u010d\6\3\1\u010e\20\3\1\0\1\3"+
    "\2\0\3\3\7\0\4\3\1\u010f\25\3\1\0\1\3"+
    "\2\0\3\3\7\0\7\3\1\u0110\22\3\1\0\1\3"+
    "\2\0\3\3\7\0\4\3\1\u0111\25\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\u0112\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\3\1\u0113\2\3\1\u0114\1\3"+
    "\1\240\1\3\1\u0115\1\3\1\u0116\4\3\1\u0117\1\u0118"+
    "\11\3\1\0\1\3\2\0\3\3\7\0\11\3\1\u0119"+
    "\20\3\1\0\1\3\2\0\3\3\7\0\25\3\1\u011a"+
    "\4\3\1\0\1\3\2\0\3\3\7\0\27\3\1\52"+
    "\2\3\1\0\1\3\2\0\3\3\7\0\4\3\1\u011b"+
    "\2\3\1\u011c\2\3\1\u011d\5\3\1\u011e\4\3\1\u011f"+
    "\4\3\1\0\1\3\2\0\3\3\7\0\1\u0120\31\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\u0121\31\3\1\0"+
    "\1\3\2\0\3\3\7\0\25\3\1\52\4\3\1\0"+
    "\1\3\2\0\3\3\7\0\5\3\1\u0122\7\3\1\u0123"+
    "\14\3\1\0\1\3\2\0\3\3\7\0\16\3\1\u0124"+
    "\6\3\1\51\4\3\1\0\1\3\2\0\3\3\7\0"+
    "\13\3\1\u0125\16\3\1\0\1\3\2\0\3\3\7\0"+
    "\23\3\1\52\6\3\1\0\1\3\2\0\3\3\7\0"+
    "\20\3\1\u0126\11\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\u0127\31\3\1\0\1\3\2\0\3\3\7\0\7\3"+
    "\1\u0128\22\3\1\0\1\3\2\0\3\3\7\0\1\u010a"+
    "\31\3\1\0\1\3\2\0\3\3\7\0\4\3\1\51"+
    "\25\3\1\0\1\3\2\0\3\3\7\0\1\362\10\3"+
    "\1\u0129\20\3\1\0\1\3\2\0\3\3\7\0\11\3"+
    "\1\u012a\20\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\u012b\25\3\1\0\1\3\2\0\3\3\7\0\6\3"+
    "\1\52\23\3\1\0\1\3\2\0\3\3\7\0\21\3"+
    "\1\51\10\3\1\0\1\3\2\0\3\3\7\0\7\3"+
    "\1\u0105\22\3\1\0\1\3\2\0\3\3\7\0\3\3"+
    "\1\51\1\376\25\3\1\0\1\3\2\0\3\3\7\0"+
    "\5\3\1\373\24\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\3\1\u012c\4\3\1\166\23\3\1\0\1\3\2\0"+
    "\3\3\7\0\6\3\1\u012d\23\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u012e\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u012f\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\5\3\1\u0110\24\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\u0130\14\3\1\110\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\u0131\25\3\1\0"+
    "\1\3\2\0\3\3\7\0\5\3\1\u0132\1\3\1\u0133"+
    "\22\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u0134"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\17\3\1\300"+
    "\12\3\1\0\1\3\1\0\47\u0135\1\0\7\46\1\237"+
    "\1\u0136\34\46\1\0\2\46\1\0\3\3\7\0\2\3"+
    "\1\u010a\27\3\1\0\1\3\2\0\3\3\7\0\11\3"+
    "\1\u0137\20\3\1\0\1\3\2\0\3\3\7\0\17\3"+
    "\1\u0138\12\3\1\0\1\3\2\0\3\3\7\0\15\3"+
    "\1\u0139\14\3\1\0\1\3\2\0\3\3\7\0\11\3"+
    "\1\u013a\20\3\1\0\1\3\2\0\3\3\7\0\2\3"+
    "\1\u013b\27\3\1\0\1\3\2\0\3\3\7\0\1\u013c"+
    "\1\3\1\51\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\7\3\1\u013d\22\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u013e\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\7\3\1\u013f\7\3\1\u0140\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\u0141\1\3\1\u0142\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\12\3\1\u0143\17\3\1\0\1\3"+
    "\2\0\3\3\7\0\16\3\1\110\13\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\234\31\3\1\0\1\3\2\0"+
    "\3\3\7\0\12\3\1\51\17\3\1\0\1\3\2\0"+
    "\3\3\7\0\22\3\1\u0144\7\3\1\0\1\3\2\0"+
    "\3\3\7\0\4\3\1\u0145\5\3\1\u0146\11\3\1\51"+
    "\5\3\1\0\1\3\2\0\3\3\7\0\12\3\1\u012d"+
    "\17\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u0147"+
    "\2\3\1\u0148\24\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u0149\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\4\3\1\51\13\3\1\u014a\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\7\3\1\u014b\22\3\1\0\1\3\2\0"+
    "\3\3\2\0\1\u014c\4\0\32\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\u014d\31\3\1\0\1\3\2\0\3\3"+
    "\7\0\7\3\1\u014e\22\3\1\0\1\3\2\0\3\3"+
    "\7\0\4\3\1\u014f\25\3\1\0\1\3\2\0\3\3"+
    "\7\0\10\3\1\u0150\21\3\1\0\1\3\2\0\3\3"+
    "\7\0\6\3\1\u0151\10\3\1\u0152\12\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\51\3\3\1\u0137\23\3"+
    "\1\0\1\3\2\0\3\3\7\0\22\3\1\u0153\2\3"+
    "\1\51\4\3\1\0\1\3\2\0\1\u0154\2\3\7\0"+
    "\32\3\1\0\1\3\2\0\3\3\7\0\6\3\1\51"+
    "\23\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u0155"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\31\3\1\u0156"+
    "\1\0\1\3\2\0\3\3\7\0\20\3\1\u0157\11\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\3\1\u0158\5\3"+
    "\1\51\22\3\1\0\1\3\2\0\3\3\7\0\13\3"+
    "\1\u0159\16\3\1\0\1\3\2\0\3\3\7\0\1\u015a"+
    "\31\3\1\0\1\3\2\0\3\3\7\0\7\3\1\u015b"+
    "\22\3\1\0\1\3\2\0\3\3\7\0\11\3\1\u015c"+
    "\20\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u015d"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\4\3\1\u015e"+
    "\25\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u015f"+
    "\6\3\1\u0160\20\3\1\0\1\3\2\0\3\3\7\0"+
    "\7\3\1\u0161\22\3\1\0\1\3\2\0\3\3\7\0"+
    "\12\3\1\u0162\5\3\1\51\1\3\1\u0163\7\3\1\0"+
    "\1\3\2\0\3\3\7\0\15\3\1\212\14\3\1\0"+
    "\1\3\2\0\3\3\7\0\13\3\1\u0164\3\3\1\u0165"+
    "\12\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u0166"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\2\3\1\51"+
    "\7\3\1\u0167\17\3\1\0\1\3\2\0\3\3\7\0"+
    "\15\3\1\u0168\14\3\1\0\1\3\2\0\3\3\7\0"+
    "\7\3\1\u0169\22\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u016a\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\22\3\1\u016b\7\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\3\1\u0108\30\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u0105\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\3\1\51\30\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\u0105\31\3\1\0\1\3\2\0\3\3\7\0\2\3"+
    "\1\u016c\27\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\u016d\25\3\1\0\1\3\2\0\3\3\7\0\12\3"+
    "\1\331\17\3\1\0\1\3\2\0\3\3\7\0\12\3"+
    "\1\u016e\17\3\1\0\1\3\2\0\3\3\7\0\10\3"+
    "\1\u013f\1\3\1\u016f\5\3\1\u0170\11\3\1\0\1\3"+
    "\2\0\3\3\7\0\12\3\1\u0171\17\3\1\0\1\3"+
    "\2\0\3\3\7\0\6\3\1\212\2\3\1\u010a\13\3"+
    "\1\u0172\1\3\1\u0173\2\3\1\0\1\3\2\0\3\3"+
    "\7\0\17\3\1\55\12\3\1\0\1\3\2\0\3\3"+
    "\7\0\7\3\1\u0174\22\3\1\0\1\3\2\0\3\3"+
    "\7\0\11\3\1\212\20\3\1\0\1\3\2\0\3\3"+
    "\7\0\6\3\1\u0175\23\3\1\0\1\3\2\0\3\3"+
    "\7\0\2\3\1\u0176\27\3\1\0\1\3\2\0\3\3"+
    "\7\0\2\3\1\u010a\5\3\1\u0115\21\3\1\0\1\3"+
    "\2\0\3\3\7\0\20\3\1\u0177\11\3\1\0\1\3"+
    "\2\0\3\3\7\0\5\3\1\u0178\24\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\u0179\31\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\51\1\3\1\51\5\3\1\u017a"+
    "\17\3\1\0\1\3\2\0\3\3\7\0\1\u013e\31\3"+
    "\1\0\1\3\2\0\3\3\7\0\20\3\1\u0166\11\3"+
    "\1\0\1\3\2\0\3\3\7\0\20\3\1\u017b\11\3"+
    "\1\0\1\3\2\0\3\3\7\0\7\3\1\u017c\22\3"+
    "\1\0\1\3\2\0\3\3\7\0\5\3\1\u017d\24\3"+
    "\1\0\1\3\2\0\3\3\7\0\4\3\1\u017e\1\3"+
    "\1\u017f\11\3\1\u0180\6\3\1\u0181\2\3\1\0\1\3"+
    "\2\0\3\3\7\0\7\3\1\u0182\3\3\1\u0183\16\3"+
    "\1\0\1\3\2\0\3\3\7\0\6\3\1\212\23\3"+
    "\1\0\1\3\2\0\3\3\7\0\10\3\1\u0184\14\3"+
    "\1\u0185\4\3\1\0\1\3\2\0\3\3\7\0\5\3"+
    "\1\u0186\12\3\1\u0187\11\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u0188\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\12\3\1\u0189\17\3\1\0\1\3\2\0\3\3"+
    "\7\0\17\3\1\131\12\3\1\0\1\3\2\0\3\3"+
    "\7\0\11\3\1\300\17\3\1\u018a\1\0\1\3\2\0"+
    "\3\3\7\0\6\3\1\u018b\23\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\u012f\31\3\1\0\1\3\2\0\3\3"+
    "\7\0\22\3\1\52\7\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\51\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\6\3\1\61\23\3\1\0\1\3\2\0\3\3"+
    "\7\0\12\3\1\u010f\17\3\1\0\1\3\2\0\3\3"+
    "\7\0\2\3\1\u018c\27\3\1\0\1\3\2\0\3\3"+
    "\7\0\25\3\1\51\4\3\1\0\1\3\2\0\3\3"+
    "\7\0\1\212\31\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u018d\1\3\1\u018e\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\6\3\1\330\23\3\1\0\1\3\2\0"+
    "\3\3\7\0\12\3\1\55\17\3\1\0\1\3\2\0"+
    "\3\3\7\0\7\3\1\51\22\3\1\0\1\3\2\0"+
    "\3\3\7\0\20\3\1\212\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\51\4\3\1\u018f\22\3\1\0"+
    "\1\3\2\0\3\3\7\0\17\3\1\375\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\3\1\u0190\30\3\1\0"+
    "\1\3\2\0\3\3\7\0\24\3\1\u0129\5\3\1\0"+
    "\1\3\2\0\3\3\7\0\26\3\1\u0191\3\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\u0110\31\3\1\0\1\3"+
    "\2\0\3\3\7\0\26\3\1\74\3\3\1\0\1\3"+
    "\2\0\3\3\7\0\15\3\1\51\14\3\1\0\1\3"+
    "\2\0\3\3\7\0\24\3\1\51\5\3\1\0\1\3"+
    "\2\0\1\u0192\2\3\7\0\32\3\1\0\1\3\2\0"+
    "\3\3\7\0\6\3\1\u0193\23\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\u0194\14\3\1\u0195\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u0196\6\3\1\51"+
    "\20\3\1\0\1\3\2\0\3\3\7\0\13\3\1\212"+
    "\16\3\1\0\1\3\2\0\3\3\7\0\7\3\1\u0197"+
    "\22\3\1\0\1\3\2\0\3\3\7\0\4\3\1\u0198"+
    "\25\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u0199"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\7\3\1\u019a"+
    "\22\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u019b"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\13\3\1\u019c"+
    "\16\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u019d"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\4\3\1\242"+
    "\4\3\1\u0103\1\3\1\u019e\16\3\1\0\1\3\2\0"+
    "\3\3\7\0\20\3\1\u019f\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\u01a0\31\3\1\0\1\3\2\0\3\3"+
    "\7\0\4\3\1\u01a1\25\3\1\0\1\3\2\0\3\3"+
    "\7\0\12\3\1\52\17\3\1\0\1\3\2\0\3\3"+
    "\7\0\11\3\1\220\20\3\1\0\1\3\2\0\3\3"+
    "\7\0\2\3\1\u01a2\27\3\1\0\1\3\2\0\3\3"+
    "\7\0\20\3\1\u01a3\11\3\1\0\1\3\2\0\3\3"+
    "\7\0\4\3\1\u01a4\25\3\1\0\1\3\2\0\3\3"+
    "\7\0\4\3\1\u01a5\25\3\1\0\1\3\2\0\3\3"+
    "\7\0\7\3\1\u01a6\22\3\1\0\1\3\2\0\3\3"+
    "\7\0\2\3\1\u01a7\7\3\1\u01a8\5\3\1\u01a9\5\3"+
    "\1\u01aa\3\3\1\0\1\3\2\0\3\3\7\0\13\3"+
    "\1\254\16\3\1\0\1\3\2\0\3\3\7\0\16\3"+
    "\1\331\13\3\1\0\1\3\2\0\3\3\7\0\11\3"+
    "\1\51\20\3\1\0\1\3\2\0\3\3\7\0\13\3"+
    "\1\110\16\3\1\0\1\3\2\0\3\3\7\0\13\3"+
    "\1\u013e\16\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\u01ab\25\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\u01ac\25\3\1\0\1\3\2\0\3\3\7\0\5\3"+
    "\1\52\1\u01ad\23\3\1\0\1\3\2\0\3\3\7\0"+
    "\15\3\1\u01ae\14\3\1\0\1\3\2\0\3\3\7\0"+
    "\12\3\1\115\6\3\1\u0108\10\3\1\0\1\3\2\0"+
    "\3\3\7\0\13\3\1\u01af\16\3\1\0\1\3\2\0"+
    "\3\3\7\0\26\3\1\51\3\3\1\0\1\3\2\0"+
    "\3\3\7\0\12\3\1\353\17\3\1\0\1\3\2\0"+
    "\3\3\7\0\11\3\1\300\20\3\1\0\1\3\2\0"+
    "\3\3\7\0\11\3\1\u01b0\20\3\1\0\1\3\2\0"+
    "\3\3\7\0\7\3\1\u0184\22\3\1\0\1\3\2\0"+
    "\3\3\7\0\5\3\1\55\24\3\1\0\1\3\2\0"+
    "\3\3\7\0\16\3\1\u01b1\13\3\1\0\1\3\2\0"+
    "\3\3\7\0\7\3\1\u01b2\22\3\1\0\1\3\2\0"+
    "\3\3\7\0\4\3\1\52\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\u01b3\31\3\1\0\1\3\2\0\3\3"+
    "\7\0\25\3\1\331\4\3\1\0\1\3\2\0\3\3"+
    "\7\0\13\3\1\u01b4\16\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u01b5\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u01b6\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\6\3\1\u01b7\23\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u01b8\11\3\1\u01b9\12\3\1\0\1\3"+
    "\2\0\3\3\7\0\11\3\1\u01ba\20\3\1\0\1\3"+
    "\2\0\3\3\7\0\5\3\1\u01bb\24\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\u019d\31\3\1\0\1\3\2\0"+
    "\3\3\7\0\10\3\1\u01bc\21\3\1\0\1\3\2\0"+
    "\3\3\7\0\4\3\1\u0166\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\27\3\1\u0105\2\3\1\0\1\3\16\0"+
    "\1\u01bd\33\0\3\3\7\0\10\3\1\52\21\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u01be\27\3\1\0"+
    "\1\3\2\0\3\3\7\0\20\3\1\u01bf\11\3\1\0"+
    "\1\3\2\0\3\3\7\0\11\3\1\u01c0\20\3\1\0"+
    "\1\3\2\0\3\3\7\0\20\3\1\u01c1\11\3\1\0"+
    "\1\3\2\0\3\3\7\0\7\3\1\u0108\22\3\1\0"+
    "\1\3\2\0\3\3\7\0\22\3\1\240\7\3\1\0"+
    "\1\3\2\0\3\3\7\0\12\3\1\u01c2\17\3\1\0"+
    "\1\3\2\0\3\3\7\0\20\3\1\u01c3\2\3\1\u01c4"+
    "\6\3\1\0\1\3\2\0\3\3\7\0\13\3\1\331"+
    "\16\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u01a7"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\4\3\1\u01c5"+
    "\25\3\1\0\1\3\2\0\3\3\7\0\5\3\1\300"+
    "\24\3\1\0\1\3\2\0\3\3\7\0\4\3\1\u01c6"+
    "\25\3\1\0\1\3\2\0\3\3\7\0\17\3\1\u01c7"+
    "\12\3\1\0\1\3\2\0\3\3\7\0\6\3\1\u01c8"+
    "\23\3\1\0\1\3\2\0\3\3\7\0\5\3\1\u01c9"+
    "\24\3\1\0\1\3\2\0\3\3\7\0\5\3\1\u01ca"+
    "\3\3\1\u01b3\20\3\1\0\1\3\2\0\3\3\7\0"+
    "\5\3\1\212\24\3\1\0\1\3\2\0\3\3\7\0"+
    "\24\3\1\52\5\3\1\0\1\3\2\0\3\3\7\0"+
    "\16\3\1\u01cb\13\3\1\0\1\3\2\0\3\3\7\0"+
    "\11\3\1\u01cc\20\3\1\0\1\3\2\0\3\3\7\0"+
    "\13\3\1\u01cd\16\3\1\0\1\3\2\0\3\3\7\0"+
    "\5\3\1\331\24\3\1\0\1\3\2\0\3\3\7\0"+
    "\11\3\1\u01bb\20\3\1\0\1\3\2\0\3\3\7\0"+
    "\20\3\1\51\11\3\1\0\1\3\2\0\3\3\7\0"+
    "\7\3\1\u01ce\22\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u01cf\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\17\3\1\u01d0\12\3\1\0\1\3\2\0\3\3\7\0"+
    "\5\3\1\u0174\24\3\1\0\1\3\2\0\3\3\7\0"+
    "\13\3\1\u01d1\16\3\1\0\1\3\2\0\3\3\7\0"+
    "\6\3\1\u012b\23\3\1\0\1\3\2\0\3\3\7\0"+
    "\17\3\1\331\12\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\362\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\17\3\1\u01d2\12\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u01d3\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u01d4\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\u01d5\31\3\1\0\1\3\2\0\3\3\7\0\17\3"+
    "\1\u01d6\12\3\1\0\1\3\2\0\3\3\7\0\17\3"+
    "\1\257\12\3\1\0\1\3\2\0\3\3\7\0\1\3"+
    "\1\u01d7\1\3\1\u01d8\1\3\1\u01d9\23\3\1\u01da\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\u01db\25\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u014a\27\3\1\0"+
    "\1\3\2\0\3\3\7\0\7\3\1\u01dc\22\3\1\0"+
    "\1\3\2\0\3\3\7\0\7\3\1\u01dd\22\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\u01de\31\3\1\0\1\3"+
    "\2\0\3\3\7\0\4\3\1\u01df\25\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\u01e0\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\u01e1\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\u01e2\16\3\1\u01e3\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u01e4\27\3\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\u01e5\25\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u015f\27\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\u01e6\31\3\1\0\1\3"+
    "\2\0\3\3\7\0\25\3\1\300\4\3\1\0\1\3"+
    "\2\0\3\3\7\0\17\3\1\212\12\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\u01e7\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\11\3\1\u010a\20\3\1\0\1\3"+
    "\2\0\1\u0192\2\3\7\0\1\u01e8\31\3\1\0\1\3"+
    "\2\0\3\3\7\0\24\3\1\u01e9\5\3\1\0\1\3"+
    "\2\0\3\3\7\0\13\3\1\52\16\3\1\0\1\3"+
    "\2\0\3\3\7\0\11\3\1\u01ea\20\3\1\0\1\3"+
    "\2\0\3\3\7\0\4\3\1\u01eb\25\3\1\0\1\3"+
    "\2\0\3\3\7\0\17\3\1\u01ec\12\3\1\0\1\3"+
    "\2\0\3\3\7\0\5\3\1\126\24\3\1\0\1\3"+
    "\2\0\3\3\7\0\14\3\1\u01ed\15\3\1\0\1\3"+
    "\2\0\3\3\7\0\7\3\1\u01ee\22\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\102\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\7\3\1\u01ef\22\3\1\0\1\3"+
    "\2\0\3\3\7\0\4\3\1\u01f0\25\3\1\0\1\3"+
    "\2\0\3\3\7\0\3\3\1\51\26\3\1\0\1\3"+
    "\2\0\3\3\7\0\12\3\1\u01f1\17\3\1\0\1\3"+
    "\2\0\3\3\7\0\5\3\1\u01f2\14\3\1\240\7\3"+
    "\1\0\1\3\2\0\3\3\7\0\13\3\1\u01f3\16\3"+
    "\1\0\1\3\2\0\3\3\7\0\17\3\1\u01f4\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\5\3\1\212\1\u01f5"+
    "\23\3\1\0\1\3\2\0\3\3\7\0\1\55\31\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\3\1\u01f6\30\3"+
    "\1\0\1\3\2\0\3\3\7\0\20\3\1\240\11\3"+
    "\1\0\1\3\2\0\3\3\7\0\12\3\1\212\17\3"+
    "\1\0\1\3\2\0\3\3\7\0\5\3\1\u01f7\24\3"+
    "\1\0\1\3\2\0\3\3\7\0\17\3\1\u01f8\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\6\3\1\u01f9\23\3"+
    "\1\0\1\3\2\0\3\3\7\0\17\3\1\u01fa\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\25\3\1\u01fb\4\3"+
    "\1\0\1\3\2\0\3\3\7\0\4\3\1\u01fc\25\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\3\1\u018b\30\3"+
    "\1\0\1\3\2\0\3\3\7\0\2\3\1\u01fd\27\3"+
    "\1\0\1\3\2\0\3\3\7\0\7\3\1\u01fe\22\3"+
    "\1\0\1\3\2\0\3\3\7\0\5\3\1\u01ff\24\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\51\10\3\1\u01f3"+
    "\20\3\1\0\1\3\2\0\3\3\7\0\4\3\1\353"+
    "\25\3\1\0\1\3\2\0\3\3\7\0\1\u0200\31\3"+
    "\1\0\1\3\2\0\3\3\7\0\14\3\1\u0187\15\3"+
    "\1\0\1\3\2\0\3\3\7\0\2\3\1\u0158\27\3"+
    "\1\0\1\3\2\0\3\3\7\0\2\3\1\u0201\27\3"+
    "\1\0\1\3\2\0\3\3\7\0\17\3\1\u0202\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\2\3\1\u0203\27\3"+
    "\1\0\1\3\2\0\3\3\7\0\5\3\1\u0204\24\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\74\31\3\1\0"+
    "\1\3\2\0\3\3\7\0\5\3\1\52\24\3\1\0"+
    "\1\3\2\0\3\3\7\0\7\3\1\212\22\3\1\0"+
    "\1\3\2\0\3\3\7\0\5\3\1\u0205\24\3\1\0"+
    "\1\3\2\0\3\3\7\0\17\3\1\u0206\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\11\3\1\u01fa\20\3\1\0"+
    "\1\3\2\0\3\3\7\0\17\3\1\u0207\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\u019d\23\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\u0208\23\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\331\23\3\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\u0209\25\3\1\0"+
    "\1\3\17\0\1\u020a\32\0\3\3\7\0\20\3\1\u020b"+
    "\11\3\1\0\1\3\2\0\3\3\7\0\17\3\1\205"+
    "\12\3\1\0\1\3\2\0\3\3\7\0\5\3\1\u0172"+
    "\24\3\1\0\1\3\2\0\3\3\7\0\1\u0104\6\3"+
    "\1\u0182\22\3\1\0\1\3\2\0\3\3\7\0\11\3"+
    "\1\u020c\20\3\1\0\1\3\2\0\3\3\7\0\4\3"+
    "\1\u020d\25\3\1\0\1\3\2\0\3\3\7\0\11\3"+
    "\1\u020e\20\3\1\0\1\3\2\0\3\3\7\0\2\3"+
    "\1\113\27\3\1\0\1\3\2\0\3\3\7\0\17\3"+
    "\1\175\12\3\1\0\1\3\2\0\3\3\7\0\12\3"+
    "\1\u019a\17\3\1\0\1\3\2\0\3\3\7\0\14\3"+
    "\1\u020f\15\3\1\0\1\3\2\0\3\3\7\0\2\3"+
    "\1\u0210\27\3\1\0\1\3\2\0\3\3\7\0\17\3"+
    "\1\u019d\12\3\1\0\1\3\2\0\3\3\7\0\1\u01cf"+
    "\31\3\1\0\1\3\2\0\3\3\7\0\13\3\1\362"+
    "\16\3\1\0\1\3\2\0\3\3\7\0\17\3\1\u0211"+
    "\12\3\1\0\1\3\2\0\3\3\7\0\13\3\1\355"+
    "\16\3\1\0\1\3\2\0\3\3\7\0\12\3\1\u0110"+
    "\17\3\1\0\1\3\2\0\3\3\7\0\14\3\1\51"+
    "\15\3\1\0\1\3\2\0\3\3\7\0\1\373\31\3"+
    "\1\0\1\3\2\0\3\3\7\0\20\3\1\242\11\3"+
    "\1\0\1\3\2\0\3\3\7\0\5\3\1\175\24\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\3\1\u0212\30\3"+
    "\1\0\1\3\2\0\3\3\7\0\5\3\1\217\24\3"+
    "\1\0\1\3\2\0\3\3\7\0\7\3\1\u0213\22\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\u0214\31\3\1\0"+
    "\1\3\2\0\3\3\7\0\25\3\1\u0105\4\3\1\0"+
    "\1\3\2\0\3\3\7\0\11\3\1\u0215\20\3\1\0"+
    "\1\3\2\0\3\3\7\0\13\3\1\u0216\16\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\u0217\31\3\1\0\1\3"+
    "\2\0\3\3\7\0\11\3\1\61\20\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\3\1\u0218\30\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\u0219\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\20\3\1\u0121\11\3\1\0\1\3"+
    "\2\0\3\3\7\0\20\3\1\u021a\11\3\1\0\1\3"+
    "\2\0\3\3\7\0\17\3\1\u021b\12\3\1\0\1\3"+
    "\2\0\3\3\7\0\6\3\1\u018a\23\3\1\0\1\3"+
    "\2\0\3\3\7\0\12\3\1\u01bc\17\3\1\0\1\3"+
    "\2\0\3\3\7\0\5\3\1\u021c\24\3\1\0\1\3"+
    "\2\0\3\3\7\0\4\3\1\u021d\25\3\1\0\1\3"+
    "\2\0\3\3\7\0\6\3\1\u021e\23\3\1\0\1\3"+
    "\2\0\3\3\7\0\12\3\1\u021f\17\3\1\0\1\3"+
    "\2\0\3\3\7\0\10\3\1\u0220\21\3\1\0\1\3"+
    "\2\0\3\3\7\0\26\3\1\300\3\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\u0221\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\22\3\1\300\7\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\u0222\31\3\1\0\1\3\2\0"+
    "\3\3\7\0\11\3\1\u01cf\20\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\u0223\27\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u0224\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\u0225\31\3\1\0\1\3\2\0\3\3"+
    "\7\0\20\3\1\u011c\6\3\1\331\2\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\3\1\52\30\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\u0226\31\3\1\0\1\3\2\0"+
    "\3\3\7\0\20\3\1\u0227\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\353\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u0228\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\11\3\1\u0229\20\3\1\0\1\3\2\0"+
    "\3\3\7\0\4\3\1\u022a\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\20\3\1\u022b\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\51\31\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u0108\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\25\3\1\u022c\4\3\1\0\1\3\2\0\3\3"+
    "\7\0\17\3\1\362\12\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u0187\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u022d\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\27\3\1\240\2\3\1\0\1\3\2\0\3\3"+
    "\7\0\6\3\1\u022e\23\3\1\0\1\3\2\0\3\3"+
    "\7\0\17\3\1\u022f\12\3\1\0\1\3\2\0\3\3"+
    "\7\0\1\255\1\3\1\330\27\3\1\0\1\3\2\0"+
    "\3\3\7\0\10\3\1\u0225\5\3\1\52\13\3\1\0"+
    "\1\3\2\0\3\3\7\0\16\3\1\u0230\13\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\u011c\23\3\1\0"+
    "\1\3\16\0\1\u0231\33\0\3\3\7\0\1\u0232\31\3"+
    "\1\0\1\3\2\0\3\3\7\0\6\3\1\u0233\23\3"+
    "\1\0\1\3\2\0\3\3\7\0\1\66\31\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\u0234\23\3\1\0"+
    "\1\3\2\0\3\3\7\0\17\3\1\u0235\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\u0236\23\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\3\1\u0237\30\3\1\0"+
    "\1\3\2\0\3\3\7\0\13\3\1\u01b3\16\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u0238\27\3\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\u0239\25\3\1\0"+
    "\1\3\2\0\3\3\7\0\26\3\1\u023a\3\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u01d5\27\3\1\0"+
    "\1\3\2\0\3\3\7\0\10\3\1\u0166\21\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u023b\27\3\1\0"+
    "\1\3\2\0\3\3\7\0\5\3\1\u023c\24\3\1\0"+
    "\1\3\2\0\3\3\7\0\10\3\1\u023d\21\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\u023e\23\3\1\0"+
    "\1\3\2\0\3\3\7\0\1\u023f\31\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\51\14\3\1\u0138\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\4\3\1\u0240\25\3"+
    "\1\0\1\3\2\0\3\3\7\0\4\3\1\u0241\25\3"+
    "\1\0\1\3\2\0\3\3\7\0\11\3\1\u01fe\20\3"+
    "\1\0\1\3\2\0\3\3\7\0\3\3\1\u0242\26\3"+
    "\1\0\1\3\2\0\3\3\7\0\12\3\1\u0225\17\3"+
    "\1\0\1\3\2\0\3\3\7\0\6\3\1\u0243\23\3"+
    "\1\0\1\3\2\0\3\3\7\0\4\3\1\u0244\25\3"+
    "\1\0\1\3\2\0\3\3\7\0\4\3\1\u0187\25\3"+
    "\1\0\1\3\2\0\3\3\7\0\7\3\1\u0245\22\3"+
    "\1\0\1\3\2\0\3\3\7\0\17\3\1\u015a\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\4\3\1\u0246\25\3"+
    "\1\0\1\3\2\0\3\3\7\0\6\3\1\u0247\23\3"+
    "\1\0\1\3\2\0\3\3\7\0\17\3\1\u0248\12\3"+
    "\1\0\1\3\2\0\3\3\7\0\4\3\1\u0249\25\3"+
    "\1\0\1\3\2\0\1\u024a\2\3\7\0\32\3\1\0"+
    "\1\3\2\0\3\3\7\0\6\3\1\u0108\23\3\1\0"+
    "\1\3\2\0\3\3\7\0\22\3\1\u024b\7\3\1\0"+
    "\1\3\2\0\3\3\7\0\23\3\1\u019a\6\3\1\0"+
    "\1\3\2\0\3\3\7\0\13\3\1\u024c\16\3\1\0"+
    "\1\3\26\0\1\u024d\23\0\3\3\7\0\25\3\1\u024e"+
    "\4\3\1\0\1\3\2\0\3\3\7\0\27\3\1\u0181"+
    "\2\3\1\0\1\3\2\0\3\3\7\0\2\3\1\u024f"+
    "\27\3\1\0\1\3\2\0\3\3\7\0\22\3\1\u0212"+
    "\7\3\1\0\1\3\2\0\3\3\7\0\12\3\1\320"+
    "\17\3\1\0\1\3\2\0\3\3\7\0\12\3\1\u0250"+
    "\17\3\1\0\1\3\2\0\3\3\7\0\22\3\1\320"+
    "\7\3\1\0\1\3\2\0\3\3\7\0\1\u0251\31\3"+
    "\1\0\1\3\2\0\3\3\7\0\20\3\1\u0252\11\3"+
    "\1\0\1\3\2\0\3\3\7\0\2\3\1\330\27\3"+
    "\1\0\1\3\2\0\3\3\7\0\11\3\1\u0253\20\3"+
    "\1\0\1\3\2\0\3\3\7\0\20\3\1\u0254\11\3"+
    "\1\0\1\3\2\0\3\3\7\0\17\3\1\u0255\12\3"+
    "\1\0\1\3\2\0\1\u0256\2\3\7\0\32\3\1\0"+
    "\1\3\2\0\3\3\7\0\2\3\1\u0257\27\3\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\u0254\25\3\1\0"+
    "\1\3\2\0\3\3\7\0\22\3\1\166\7\3\1\0"+
    "\1\3\2\0\3\3\7\0\21\3\1\u0258\10\3\1\0"+
    "\1\3\2\0\3\3\7\0\21\3\1\u0259\10\3\1\0"+
    "\1\3\2\0\3\3\7\0\12\3\1\u025a\17\3\1\0"+
    "\1\3\2\0\3\3\7\0\17\3\1\u025b\12\3\1\0"+
    "\1\3\2\0\3\3\7\0\5\3\1\u025c\24\3\1\0"+
    "\1\3\2\0\3\3\7\0\4\3\1\u023c\25\3\1\0"+
    "\1\3\2\0\3\3\7\0\10\3\1\110\21\3\1\0"+
    "\1\3\2\0\1\u025d\2\3\7\0\32\3\1\0\1\3"+
    "\2\0\3\3\7\0\11\3\1\u0105\20\3\1\0\1\3"+
    "\2\0\3\3\7\0\20\3\1\u025e\11\3\1\0\1\3"+
    "\2\0\3\3\7\0\2\3\1\212\27\3\1\0\1\3"+
    "\2\0\3\3\7\0\6\3\1\326\23\3\1\0\1\3"+
    "\2\0\3\3\7\0\4\3\1\u025f\25\3\1\0\1\3"+
    "\2\0\3\3\7\0\6\3\1\u0260\23\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\3\1\353\2\3\1\u0261\6\3"+
    "\1\u019c\16\3\1\0\1\3\2\0\3\3\7\0\5\3"+
    "\1\u0111\24\3\1\0\1\3\2\0\1\u0262\2\3\7\0"+
    "\12\3\1\u0250\17\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\u0263\31\3\1\0\1\3\2\0\3\3\7\0\20\3"+
    "\1\u0264\3\3\1\u0265\5\3\1\0\1\3\2\0\3\3"+
    "\7\0\12\3\1\u0166\17\3\1\0\1\3\2\0\3\3"+
    "\7\0\11\3\1\u0129\20\3\1\0\1\3\2\0\3\3"+
    "\7\0\15\3\1\u0266\7\3\1\u0267\4\3\1\0\1\3"+
    "\2\0\3\3\7\0\11\3\1\u0268\20\3\1\0\1\3"+
    "\2\0\3\3\7\0\1\255\31\3\1\0\1\3\2\0"+
    "\3\3\7\0\4\3\1\u0203\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u0269\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u026a\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\13\3\1\u026b\16\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u026c\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\u026d\27\3\1\0\1\3\2\0"+
    "\3\3\7\0\11\3\1\u026e\20\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u026f\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\13\3\1\u0270\16\3\1\0\1\3\2\0"+
    "\3\3\7\0\25\3\1\u0271\4\3\1\0\1\3\2\0"+
    "\3\3\7\0\6\3\1\u0272\23\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\3\1\u0185\30\3\1\0\1\3\2\0"+
    "\3\3\7\0\25\3\1\u0273\4\3\1\0\1\3\2\0"+
    "\3\3\7\0\21\3\1\u0274\10\3\1\0\1\3\2\0"+
    "\3\3\7\0\13\3\1\u010a\16\3\1\0\1\3\2\0"+
    "\3\3\7\0\6\3\1\u0184\23\3\1\0\1\3\2\0"+
    "\3\3\7\0\5\3\1\u0121\24\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\u0275\27\3\1\0\1\3\2\0"+
    "\3\3\7\0\20\3\1\u0181\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\17\3\1\u0276\12\3\1\0\1\3\2\0"+
    "\3\3\7\0\10\3\1\u0277\21\3\1\0\1\3\2\0"+
    "\3\3\7\0\20\3\1\u01c3\11\3\1\0\1\3\2\0"+
    "\3\3\7\0\7\3\1\u0278\22\3\1\0\1\3\2\0"+
    "\3\3\7\0\15\3\1\u0279\14\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\u027a\31\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u027b\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\5\3\1\u027c\24\3\1\0\1\3\2\0\3\3"+
    "\7\0\1\u027d\31\3\1\0\1\3\2\0\3\3\7\0"+
    "\17\3\1\u027e\12\3\1\0\1\3\2\0\3\3\7\0"+
    "\20\3\1\u027f\11\3\1\0\1\3\2\0\3\3\7\0"+
    "\4\3\1\u0280\25\3\1\0\1\3\2\0\3\3\7\0"+
    "\2\3\1\u0281\27\3\1\0\1\3\2\0\3\3\7\0"+
    "\21\3\1\u0282\10\3\1\0\1\3\2\0\3\3\7\0"+
    "\1\3\1\u0283\2\3\1\u025f\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\2\3\1\u0284\27\3\1\0\1\3\2\0"+
    "\3\3\7\0\4\3\1\u0285\25\3\1\0\1\3\2\0"+
    "\3\3\7\0\1\u0286\31\3\1\0\1\3\2\0\3\3"+
    "\7\0\17\3\1\u0287\12\3\1\0\1\3\2\0\3\3"+
    "\7\0\7\3\1\u0288\22\3\1\0\1\3\2\0\3\3"+
    "\7\0\20\3\1\u0281\11\3\1\0\1\3\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[25040];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\3\1\3\11\1\1\1\11\33\1\1\0"+
    "\166\1\1\0\1\1\1\0\225\1\1\0\26\1\1\0"+
    "\160\1\1\0\114\1\1\0\46\1\1\0\33\1\1\11"+
    "\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[648];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  public int zzMarkedPos;

  /** the current text position in the buffer */
  public int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Alexico(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Alexico(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 138) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 11: 
          { lexeme=yytext(); return Float;
          }
        case 15: break;
        case 1: 
          { return ERROR;
          }
        case 16: break;
        case 8: 
          { return Division;
          }
        case 17: break;
        case 5: 
          { return Suma;
          }
        case 18: break;
        case 10: 
          { lexeme=yytext(); return Bit;
          }
        case 19: break;
        case 9: 
          { return Igual;
          }
        case 20: break;
        case 13: 
          { lexeme=yytext(); return Reservadas;
          }
        case 21: break;
        case 14: 
          { lexeme=yytext(); return String;
          }
        case 22: break;
        case 12: 
          { lexeme=yytext(); return Comentario;
          }
        case 23: break;
        case 3: 
          { lexeme=yytext(); return Int;
          }
        case 24: break;
        case 7: 
          { return Multiplicacion;
          }
        case 25: break;
        case 6: 
          { return Resta;
          }
        case 26: break;
        case 4: 
          { /*Ignore*/
          }
        case 27: break;
        case 2: 
          { lexeme=yytext(); return Identificador;
          }
        case 28: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
